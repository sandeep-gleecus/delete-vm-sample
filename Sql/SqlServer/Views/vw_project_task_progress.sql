--This view is now only used to display the shape of the data, the query is executed from
--the TASK_RETRIEVE_GROUP_SUMMARY_BY_PROJECT stored procedure instead
IF OBJECT_ID ( 'VW_PROJECT_TASK_PROGRESS', 'V' ) IS NOT NULL 
    DROP VIEW VW_PROJECT_TASK_PROGRESS;
GO
CREATE VIEW VW_PROJECT_TASK_PROGRESS
AS
SELECT        
         PRJ2.PROJECT_GROUP_ID, PRJ2.PROJECT_ID, PRJ2.NAME AS PROJECT_NAME, PRJ2.DESCRIPTION AS PROJECT_DESCRIPTION, ISNULL(PTP.TASK_COUNT, 0) AS TASK_COUNT, PTP.RELEASE_ID, 
                         PTP.TASK_PERCENT_ON_TIME, PTP.TASK_PERCENT_LATE_FINISH, PTP.TASK_PERCENT_NOT_START, PTP.TASK_PERCENT_LATE_START, PTP.TASK_ESTIMATED_EFFORT, PTP.TASK_ACTUAL_EFFORT, 
                         PTP.TASK_REMAINING_EFFORT, PTP.TASK_PROJECTED_EFFORT
FROM            (SELECT        PRJ.PROJECT_ID, REL.RELEASE_ID, SUM(REL.TASK_COUNT) AS TASK_COUNT, ISNULL(AVG(REL.TASK_PERCENT_ON_TIME), 0) AS TASK_PERCENT_ON_TIME, ISNULL(AVG(REL.TASK_PERCENT_LATE_FINISH), 0) 
                                                    AS TASK_PERCENT_LATE_FINISH, ISNULL(AVG(REL.TASK_PERCENT_NOT_START), 0) AS TASK_PERCENT_NOT_START, ISNULL(AVG(REL.TASK_PERCENT_LATE_START), 0) AS TASK_PERCENT_LATE_START, 
                                                    ISNULL(SUM(REL.TASK_ESTIMATED_EFFORT), 0) AS TASK_ESTIMATED_EFFORT, ISNULL(SUM(REL.TASK_ACTUAL_EFFORT), 0) AS TASK_ACTUAL_EFFORT, ISNULL(SUM(REL.TASK_REMAINING_EFFORT), 0) 
                                                    AS TASK_REMAINING_EFFORT, ISNULL(SUM(REL.TASK_PROJECTED_EFFORT), 0) AS TASK_PROJECTED_EFFORT
                          FROM            dbo.TST_RELEASE AS REL INNER JOIN
                                                    dbo.TST_PROJECT AS PRJ ON REL.PROJECT_ID = PRJ.PROJECT_ID
                          WHERE        (REL.RELEASE_TYPE_ID = 1) AND (REL.TASK_COUNT > 0) AND (REL.IS_DELETED = 0) AND (PRJ.IS_ACTIVE = 1) OR
                                                    (REL.TASK_COUNT > 0) AND (REL.IS_DELETED = 0) AND (PRJ.IS_ACTIVE = 1) AND (LEN(REL.INDENT_LEVEL) = 3)
                          GROUP BY PRJ.PROJECT_ID, REL.RELEASE_ID) AS PTP RIGHT OUTER JOIN
                         dbo.TST_PROJECT AS PRJ2 ON PRJ2.PROJECT_ID = PTP.PROJECT_ID
WHERE        (PRJ2.IS_ACTIVE = 1)
GO
