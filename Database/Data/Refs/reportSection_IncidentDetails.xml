<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:msxsl="urn:schemas-microsoft-com:xslt" exclude-result-prefixes="msxsl">
  <xsl:template match="/IncidentData">
    <xsl:for-each select="Incident">
      <div class="Title2">
        IN:<xsl:value-of select="IncidentId"/> - <xsl:value-of select="Name"/>
      </div>
      <div class="Description">
        <xsl:value-of select="Description" disable-output-escaping="yes"/>
      </div>
      <table class="HiddenTable">
        <tr>
          <th>Type:</th>
          <td>
            <xsl:value-of select="IncidentTypeName"/>
          </td>
          <th>Priority:</th>
          <td>
            <xsl:value-of select="PriorityName"/>
          </td>
        </tr>
        <tr>
          <th>Status:</th>
          <td>
            <xsl:value-of select="IncidentStatusName"/>
          </td>
          <th>Severity:</th>
          <td>
            <xsl:value-of select="SeverityName"/>
          </td>
        </tr>
        <tr>
          <th>Opened By:</th>
          <td>
            <xsl:value-of select="OpenerName"/>
          </td>
          <th>Opened On:</th>
          <td class="Date">
            <xsl:call-template name="format-date">
              <xsl:with-param name="datetime" select="CreationDate" />
            </xsl:call-template>
          </td>
        </tr>
        <tr>
          <th>Assigned To:</th>
          <td>
            <xsl:value-of select="OwnerName"/>
          </td>
          <th>Last Modified:</th>
          <td class="Date">
            <xsl:call-template name="format-date">
              <xsl:with-param name="datetime" select="LastUpdateDate" />
            </xsl:call-template>
          </td>
        </tr>
        <tr>
          <th>Detected In Release:</th>
          <td>
            <xsl:value-of select="DetectedReleaseVersionNumber"/>
          </td>
          <th>Closed On:</th>
          <td class="Date">
            <xsl:call-template name="format-date">
              <xsl:with-param name="datetime" select="ClosedDate" />
            </xsl:call-template>
          </td>
        </tr>
        <tr>
          <th>Planned For Release:</th>
          <td>
            <xsl:value-of select="ResolvedReleaseVersionNumber"/>
          </td>
          <th>Verified In Release:</th>
          <td>
            <xsl:value-of select="VerifiedReleaseVersionNumber"/>
          </td>
        </tr>
        <tr>
          <th>Component(s):</th>
          <td>
            <xsl:value-of select="ComponentNames"/>
          </td>
          <th>Fixed Build:</th>
          <td>
            <xsl:value-of select="BuildName"/>
          </td>
        </tr>

        <tr>
          <th>Estimated Effort:</th>
          <td class="Timespan">
            <xsl:value-of select="EstimatedEffort"/>
          </td>
          <th>Actual Effort:</th>
          <td class="Timespan">
            <xsl:value-of select="ActualEffort"/>
          </td>
        </tr>
        <tr>
          <th>Remaining Effort:</th>
          <td class="Timespan">
            <xsl:value-of select="RemainingEffort"/>
          </td>
          <th>Projected Effort:</th>
          <td class="Timespan">
            <xsl:value-of select="ProjectedEffort"/>
          </td>
        </tr>
        <xsl:for-each select="CustomProperties/CustomProperty">
          <tr>
            <th>
              <xsl:value-of select="Alias"/>:
            </th>
            <xsl:choose>
              <xsl:when test="Type='Date'">
                <td class="Date" colspan="3">
                  <xsl:call-template name="format-date">
                    <xsl:with-param name="datetime" select="Value" />
                  </xsl:call-template>
                </td>
              </xsl:when>
              <xsl:otherwise>
                <td colspan="3">
                  <xsl:value-of select="Value" disable-output-escaping="yes"/>
                </td>
              </xsl:otherwise>
            </xsl:choose>
          </tr>
        </xsl:for-each>
      </table>
      <xsl:if test="IncidentResolutions/IncidentResolution">
        <div class="Title3">
          Resolutions/Comments:
        </div>
        <table class="DataGrid">
          <tr>
            <th>Date</th>
            <th>Creator</th>
            <th>Resolution/Comment</th>
            <th>Resolution Id</th>
          </tr>
          <xsl:for-each select="IncidentResolutions/IncidentResolution">
            <tr>
              <td class="Date">
                <xsl:call-template name="format-date">
                  <xsl:with-param name="datetime" select="CreationDate" />
                </xsl:call-template>
              </td>
              <td>
                <xsl:value-of select="CreatorName"/>
              </td>
              <td>
                <xsl:value-of select="Resolution" disable-output-escaping="yes"/>
              </td>
              <td>
                <xsl:value-of select="IncidentResolutionId"/>
              </td>
            </tr>
          </xsl:for-each>
        </table>
      </xsl:if>
      <xsl:if test="ArtifactLinks/ArtifactLink">
        <div class="Title3">
          Associations:
        </div>
        <table class="DataGrid">
          <tr>
            <th>Association</th>
            <th>Artifact Type</th>
            <th>Name</th>
            <th>Created By</th>
            <th>Comment</th>
            <th>Date</th>
            <th>Status</th>
            <th>Artifact Id</th>
          </tr>
          <xsl:for-each select="ArtifactLinks/ArtifactLink">
            <tr>
              <td>
                <xsl:value-of select="ArtifactLinkTypeName"/>
              </td>
              <td>
                <xsl:value-of select="ArtifactTypeName"/>
              </td>
              <td>
                <xsl:value-of select="ArtifactName"/>
              </td>
              <td>
                <xsl:value-of select="CreatorName"/>
              </td>
              <td>
                <xsl:value-of select="Comment"/>
              </td>
              <td class="Date">
                <xsl:call-template name="format-date">
                  <xsl:with-param name="datetime" select="CreationDate" />
                </xsl:call-template>
              </td>
              <td>
                <xsl:value-of select="ArtifactStatusName"/>
              </td>
              <td>
                <xsl:if test="ArtifactTypeId = 1">
                  RQ
                </xsl:if>
                <xsl:if test="ArtifactTypeId = 3">
                  IN
                </xsl:if>
                <xsl:if test="ArtifactTypeId = 5">
                  TR
                </xsl:if>
                <xsl:if test="ArtifactTypeId = 6">
                  TK
                </xsl:if>
                <xsl:if test="ArtifactTypeId = 7">
                  TS
                </xsl:if>
                <xsl:value-of select="ArtifactId"/>
              </td>
            </tr>
          </xsl:for-each>
        </table>
      </xsl:if>
      <xsl:if test="Attachments/Attachment">
        <div class="Title3">
          File Attachments:
        </div>
        <table class="DataGrid">
          <tr>
            <th>Filename</th>
            <th>Description</th>
            <th>Author</th>
            <th>Date Uploaded</th>
          </tr>
          <xsl:for-each select="Attachments/Attachment">
            <tr>
              <td>
                <xsl:value-of select="Filename"/>
              </td>
              <td>
                <xsl:value-of select="Description"/>
              </td>
              <td>
                <xsl:value-of select="AuthorName"/>
              </td>
              <td class="Date">
                <xsl:call-template name="format-date">
                  <xsl:with-param name="datetime" select="UploadDate" />
                </xsl:call-template>
              </td>
            </tr>
          </xsl:for-each>
        </table>
      </xsl:if>
      <xsl:if test="SourceCodeRevisions/SourceCodeRevision">
        <div class="Title3">
          Source Code Revisions:
        </div>
        <table class="DataGrid">
          <tr>
            <th>Name</th>
            <th>Message</th>
            <th>Author</th>
            <th>Date</th>
          </tr>
          <xsl:for-each select="SourceCodeRevisions/SourceCodeRevision">
            <tr>
              <td>
                <xsl:value-of select="Name"/>
              </td>
              <td>
                <xsl:value-of select="Message"/>
              </td>
              <td>
                <xsl:value-of select="AuthorName"/>
              </td>
              <td class="Date">
                <xsl:call-template name="format-date">
                  <xsl:with-param name="datetime" select="UpdateDate" />
                </xsl:call-template>
              </td>
            </tr>
          </xsl:for-each>
        </table>
      </xsl:if>
      <xsl:if test="History/ArtifactHistory">
        <div class="Title3">
          Incident Change History:
        </div>
        <table class="DataGrid">
          <tr>
            <th>Change Date</th>
            <th>Field Name</th>
            <th>Old Value</th>
            <th>New Value</th>
            <th>Changed By</th>
          </tr>
          <xsl:for-each select="History/ArtifactHistory">
            <tr>
              <td class="Date">
                <xsl:call-template name="format-date">
                  <xsl:with-param name="datetime" select="ChangeDate" />
                </xsl:call-template>
              </td>
              <td>
                <xsl:value-of select="FieldCaption"/>
              </td>
              <td>
                <xsl:value-of select="OldValue" disable-output-escaping="yes"/>
              </td>
              <td>
                <xsl:value-of select="NewValue" disable-output-escaping="yes"/>
              </td>
              <td>
                <xsl:value-of select="ChangerName"/>
              </td>
            </tr>
          </xsl:for-each>
        </table>
      </xsl:if>
      <br/>
    </xsl:for-each>
  </xsl:template>
  <xsl:template name="format-date">
    <xsl:param name="datetime"/>
    <xsl:variable name="date" select="substring-before($datetime, 'T')" />
    <xsl:variable name="year" select="substring-before($date, '-')" />
    <xsl:variable name="month" select="substring-before(substring-after($date, '-'), '-')" />
    <xsl:variable name="day" select="substring-after(substring-after($date, '-'), '-')" />
    <xsl:variable name="time" select="substring-before(substring-after($datetime, 'T'), '.')" />
    <xsl:variable name="monthname">
      <xsl:choose>
        <xsl:when test="$month='01'">
          <xsl:value-of select="'Jan'"/>
        </xsl:when>
        <xsl:when test="$month='02'">
          <xsl:value-of select="'Feb'"/>
        </xsl:when>
        <xsl:when test="$month='03'">
          <xsl:value-of select="'Mar'"/>
        </xsl:when>
        <xsl:when test="$month='04'">
          <xsl:value-of select="'Apr'"/>
        </xsl:when>
        <xsl:when test="$month='05'">
          <xsl:value-of select="'May'"/>
        </xsl:when>
        <xsl:when test="$month='06'">
          <xsl:value-of select="'Jun'"/>
        </xsl:when>
        <xsl:when test="$month='07'">
          <xsl:value-of select="'Jul'"/>
        </xsl:when>
        <xsl:when test="$month='08'">
          <xsl:value-of select="'Aug'"/>
        </xsl:when>
        <xsl:when test="$month='09'">
          <xsl:value-of select="'Sep'"/>
        </xsl:when>
        <xsl:when test="$month='10'">
          <xsl:value-of select="'Oct'"/>
        </xsl:when>
        <xsl:when test="$month='11'">
          <xsl:value-of select="'Nov'"/>
        </xsl:when>
        <xsl:when test="$month='12'">
          <xsl:value-of select="'Dec'"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="''" />
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <xsl:value-of select="concat($day, '-' ,$monthname, '-', $year , ' ', $time)" />
  </xsl:template>
</xsl:stylesheet>

