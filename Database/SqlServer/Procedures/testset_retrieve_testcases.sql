-- =====================================================================
-- Author:			Inflectra Corporation
-- Business Object: TestSet
-- Description:		Retrieves the list of test cases with the execution information
-- =====================================================================
IF OBJECT_ID ( 'TESTSET_RETRIEVE_TESTCASES', 'P' ) IS NOT NULL 
    DROP PROCEDURE [TESTSET_RETRIEVE_TESTCASES];
GO
CREATE PROCEDURE [TESTSET_RETRIEVE_TESTCASES]
	@ProjectId INT,
	@TestSetId INT,
	@ReleaseId INT,
	@IncludeDeleted BIT
AS
BEGIN
	IF @ReleaseId IS NULL
	BEGIN
		SELECT TSC.*,
		ISNULL(TRN.EXECUTION_STATUS_ID, 3 /* Not Run */) AS EXECUTION_STATUS_ID,
		ISNULL(EXE.NAME, 'Not Run') AS EXECUTION_STATUS_NAME,
		TRN.EXECUTION_DATE,
		TRN.ACTUAL_DURATION
		FROM [VW_TESTSET_TESTCASE_LIST_INTERNAL] TSC
		LEFT JOIN
			(SELECT RUN1.TEST_SET_TEST_CASE_ID, MIN(RUN1.EXECUTION_STATUS_ID) AS EXECUTION_STATUS_ID, MIN(RUN1.END_DATE) AS EXECUTION_DATE, MIN(RUN1.ACTUAL_DURATION) AS ACTUAL_DURATION FROM TST_TEST_RUN RUN1
				INNER JOIN (SELECT TEST_SET_TEST_CASE_ID, MAX(END_DATE) AS END_DATE FROM TST_TEST_RUN WHERE TEST_SET_ID = @TestSetId GROUP BY TEST_SET_TEST_CASE_ID) RUN2
				ON RUN1.TEST_SET_TEST_CASE_ID = RUN2.TEST_SET_TEST_CASE_ID AND RUN1.END_DATE = RUN2.END_DATE
				WHERE RUN1.TEST_SET_ID = @TestSetId GROUP BY RUN1.TEST_SET_TEST_CASE_ID) TRN
			ON TSC.TEST_SET_TEST_CASE_ID = TRN.TEST_SET_TEST_CASE_ID
		LEFT JOIN TST_EXECUTION_STATUS EXE ON TRN.EXECUTION_STATUS_ID = EXE.EXECUTION_STATUS_ID
		WHERE	TSC.TEST_SET_ID = @TestSetId
		AND		TSC.PROJECT_ID = @ProjectId
		AND		(TSC.IS_TEST_CASE_DELETED = 0 OR @IncludeDeleted = 1)
		ORDER BY TSC.POSITION, TSC.TEST_SET_TEST_CASE_ID
	END
	ELSE
	BEGIN
		--Declare results set
		DECLARE  @ReleaseList TABLE
		(
			RELEASE_ID INT
		)
		DECLARE @ReturnValue INT
		
		--Populate list of child items that we need to consider
		INSERT @ReleaseList (RELEASE_ID)
		SELECT RELEASE_ID FROM FN_RELEASE_GET_SELF_AND_CHILDREN (@ProjectId, @ReleaseId, 0)
		
		SELECT TSC.*,
		ISNULL(TRN.EXECUTION_STATUS_ID, 3 /* Not Run */) AS EXECUTION_STATUS_ID,
		ISNULL(EXE.NAME, 'Not Run') AS EXECUTION_STATUS_NAME,
		TRN.EXECUTION_DATE,
		TRN.ACTUAL_DURATION
		FROM [VW_TESTSET_TESTCASE_LIST_INTERNAL] TSC
		LEFT JOIN
			(SELECT RUN1.TEST_SET_TEST_CASE_ID, MIN(RUN1.EXECUTION_STATUS_ID) AS EXECUTION_STATUS_ID, MIN(RUN1.END_DATE) AS EXECUTION_DATE, MIN(RUN1.ACTUAL_DURATION) AS ACTUAL_DURATION FROM TST_TEST_RUN RUN1
				INNER JOIN (SELECT TEST_SET_TEST_CASE_ID, MAX(END_DATE) AS END_DATE FROM TST_TEST_RUN WHERE TEST_SET_ID = @TestSetId AND RELEASE_ID IN (SELECT RELEASE_ID FROM @ReleaseList) GROUP BY TEST_SET_TEST_CASE_ID) RUN2
				ON RUN1.TEST_SET_TEST_CASE_ID = RUN2.TEST_SET_TEST_CASE_ID AND RUN1.END_DATE = RUN2.END_DATE
				WHERE RUN1.TEST_SET_ID = @TestSetId AND RELEASE_ID IN (SELECT RELEASE_ID FROM @ReleaseList) GROUP BY RUN1.TEST_SET_TEST_CASE_ID) TRN
			ON TSC.TEST_SET_TEST_CASE_ID = TRN.TEST_SET_TEST_CASE_ID
		LEFT JOIN TST_EXECUTION_STATUS EXE ON TRN.EXECUTION_STATUS_ID = EXE.EXECUTION_STATUS_ID
		WHERE	TSC.TEST_SET_ID = @TestSetId
		AND		TSC.PROJECT_ID = @ProjectId
		AND		(TSC.IS_TEST_CASE_DELETED = 0 OR @IncludeDeleted = 1)
		ORDER BY TSC.POSITION, TSC.TEST_SET_TEST_CASE_ID
	END
END
GO
