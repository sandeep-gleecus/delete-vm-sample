-- =====================================================================
-- Author:			Inflectra Corporation
-- Business Object: Task
-- Description:		Refreshes the folder hierarchy for the specified project
-- =====================================================================
IF OBJECT_ID ( 'TASK_REFRESH_FOLDER_HIERARCHY', 'P' ) IS NOT NULL 
    DROP PROCEDURE [TASK_REFRESH_FOLDER_HIERARCHY];
GO
CREATE PROCEDURE [TASK_REFRESH_FOLDER_HIERARCHY]
	@ProjectId INT
AS
BEGIN
	--First delete the existing folders
	DELETE FROM TST_TASK_FOLDER_HIERARCHY
	WHERE PROJECT_ID = @ProjectId;

	WITH TASK_FOLDER_HIERARCHY (TASK_FOLDER_ID, PROJECT_ID, NAME, PARENT_TASK_FOLDER_ID, HIERARCHY_LEVEL, INDENT_LEVEL)
	AS
	(
		SELECT	TKF.TASK_FOLDER_ID, TKF.PROJECT_ID, TKF.NAME, TKF.PARENT_TASK_FOLDER_ID, 1 AS HIERARCHY_LEVEL,
				CAST(dbo.FN_CREATE_INDENT_LEVEL(ROW_NUMBER() OVER(ORDER BY TKF.NAME)) AS NVARCHAR(MAX)) AS INDENT_LEVEL
		FROM TST_TASK_FOLDER TKF
		WHERE TKF.PARENT_TASK_FOLDER_ID IS NULL AND TKF.PROJECT_ID = @ProjectId
		UNION ALL
		SELECT	TKF.TASK_FOLDER_ID, TKF.PROJECT_ID, TKF.NAME, TKF.PARENT_TASK_FOLDER_ID, (CTE.HIERARCHY_LEVEL + 1) AS HIERARCHY_LEVEL,
				CTE.INDENT_LEVEL + dbo.FN_CREATE_INDENT_LEVEL(ROW_NUMBER() OVER(ORDER BY TKF.NAME)) AS INDENT_LEVEL
		FROM TST_TASK_FOLDER TKF
		INNER JOIN TASK_FOLDER_HIERARCHY CTE ON TKF.PARENT_TASK_FOLDER_ID = CTE.TASK_FOLDER_ID
		WHERE TKF.PARENT_TASK_FOLDER_ID IS NOT NULL AND TKF.PROJECT_ID = @ProjectId
	)
	INSERT INTO TST_TASK_FOLDER_HIERARCHY (TASK_FOLDER_ID, PROJECT_ID, NAME, PARENT_TASK_FOLDER_ID, HIERARCHY_LEVEL, INDENT_LEVEL)
	SELECT ISNULL(TASK_FOLDER_ID, 0) AS TASK_FOLDER_ID, PROJECT_ID, NAME, PARENT_TASK_FOLDER_ID, HIERARCHY_LEVEL, INDENT_LEVEL
	FROM TASK_FOLDER_HIERARCHY
	ORDER BY PROJECT_ID, INDENT_LEVEL COLLATE Latin1_General_BIN
END
GO
