-- =============================================
-- Author:			Inflectra Corporation
-- Business Object: ArtifactLink
-- Description:		Retrieves by artifact for all dest types
-- =============================================
IF OBJECT_ID ( 'ARTIFACTLINK_RETRIEVE_BY_ARTIFACT', 'P' ) IS NOT NULL 
    DROP PROCEDURE ARTIFACTLINK_RETRIEVE_BY_ARTIFACT;
GO
CREATE PROCEDURE ARTIFACTLINK_RETRIEVE_BY_ARTIFACT
	@ArtifactTypeId INT,
	@ArtifactId INT
AS
BEGIN

	--Direct link to a Requirement
	SELECT	ARL.ARTIFACT_LINK_ID, ARL.DEST_ARTIFACT_ID AS ARTIFACT_ID, ARL.DEST_ARTIFACT_TYPE_ID AS ARTIFACT_TYPE_ID,
			ARL.CREATOR_ID, ARL.CREATION_DATE, ARL.COMMENT, REQ.NAME AS ARTIFACT_NAME, ART.NAME AS ARTIFACT_TYPE_NAME,
			(RTRIM(USR.FIRST_NAME + ' ' + ISNULL(USR.MIDDLE_INITIAL,'')) + ' ' + USR.LAST_NAME) AS CREATOR_NAME,
    		ALT.ARTIFACT_LINK_TYPE_ID, ALT.NAME AS ARTIFACT_LINK_TYPE_NAME, STA.NAME AS ARTIFACT_STATUS_NAME,
    		REQ.PROJECT_ID
	FROM	TST_ARTIFACT_LINK ARL INNER JOIN TST_ARTIFACT_TYPE ART
	ON		ARL.DEST_ARTIFACT_TYPE_ID = ART.ARTIFACT_TYPE_ID LEFT JOIN TST_USER_PROFILE USR
	ON		ARL.CREATOR_ID = USR.USER_ID INNER JOIN TST_REQUIREMENT REQ
	ON		ARL.DEST_ARTIFACT_ID = REQ.REQUIREMENT_ID INNER JOIN TST_ARTIFACT_LINK_TYPE ALT
    ON		ARL.ARTIFACT_LINK_TYPE_ID = ALT.ARTIFACT_LINK_TYPE_ID INNER JOIN TST_REQUIREMENT_STATUS STA
    ON		REQ.REQUIREMENT_STATUS_ID = STA.REQUIREMENT_STATUS_ID
	WHERE	ARL.SOURCE_ARTIFACT_TYPE_ID = @ArtifactTypeId
	AND		ARL.SOURCE_ARTIFACT_ID = @ArtifactId
	AND		ARL.DEST_ARTIFACT_TYPE_ID = 1
    AND    REQ.IS_DELETED = 0
    UNION
	--Direct link from a Requirement
	SELECT	ARL.ARTIFACT_LINK_ID, ARL.SOURCE_ARTIFACT_ID AS ARTIFACT_ID, ARL.SOURCE_ARTIFACT_TYPE_ID AS ARTIFACT_TYPE_ID,
			ARL.CREATOR_ID, ARL.CREATION_DATE, ARL.COMMENT, REQ.NAME AS ARTIFACT_NAME, ART.NAME AS ARTIFACT_TYPE_NAME,
			(RTRIM(USR.FIRST_NAME + ' ' + ISNULL(USR.MIDDLE_INITIAL,'')) + ' ' + USR.LAST_NAME) AS CREATOR_NAME,
    		ALT.ARTIFACT_LINK_TYPE_ID, ALT.REVERSE_NAME AS ARTIFACT_LINK_TYPE_NAME, STA.NAME AS ARTIFACT_STATUS_NAME,
    		REQ.PROJECT_ID
	FROM	TST_ARTIFACT_LINK ARL INNER JOIN TST_ARTIFACT_TYPE ART
	ON		ARL.SOURCE_ARTIFACT_TYPE_ID = ART.ARTIFACT_TYPE_ID LEFT JOIN TST_USER_PROFILE USR
	ON		ARL.CREATOR_ID = USR.USER_ID INNER JOIN TST_REQUIREMENT REQ
	ON		ARL.SOURCE_ARTIFACT_ID = REQ.REQUIREMENT_ID INNER JOIN TST_ARTIFACT_LINK_TYPE ALT
    ON		ARL.ARTIFACT_LINK_TYPE_ID = ALT.ARTIFACT_LINK_TYPE_ID INNER JOIN TST_REQUIREMENT_STATUS STA
    ON		REQ.REQUIREMENT_STATUS_ID = STA.REQUIREMENT_STATUS_ID
	WHERE	ARL.DEST_ARTIFACT_TYPE_ID = @ArtifactTypeId
	AND		ARL.DEST_ARTIFACT_ID = @ArtifactId
	AND		ARL.SOURCE_ARTIFACT_TYPE_ID = 1
    AND    REQ.IS_DELETED = 0
	UNION
	--Direct link to an Incident
	SELECT	ARL.ARTIFACT_LINK_ID, ARL.DEST_ARTIFACT_ID AS ARTIFACT_ID, ARL.DEST_ARTIFACT_TYPE_ID AS ARTIFACT_TYPE_ID,
			ARL.CREATOR_ID, ARL.CREATION_DATE, ARL.COMMENT, INC.NAME AS ARTIFACT_NAME, ART.NAME AS ARTIFACT_TYPE_NAME,
			(RTRIM(USR.FIRST_NAME + ' ' + ISNULL(USR.MIDDLE_INITIAL,'')) + ' ' + USR.LAST_NAME) AS CREATOR_NAME,
    		ALT.ARTIFACT_LINK_TYPE_ID, ALT.NAME AS ARTIFACT_LINK_TYPE_NAME, STA.NAME AS ARTIFACT_STATUS_NAME,
    		INC.PROJECT_ID
	FROM	TST_ARTIFACT_LINK ARL INNER JOIN TST_ARTIFACT_TYPE ART
	ON		ARL.DEST_ARTIFACT_TYPE_ID = ART.ARTIFACT_TYPE_ID LEFT JOIN TST_USER_PROFILE USR
	ON		ARL.CREATOR_ID = USR.USER_ID INNER JOIN TST_INCIDENT INC
	ON		ARL.DEST_ARTIFACT_ID = INC.INCIDENT_ID INNER JOIN TST_ARTIFACT_LINK_TYPE ALT
    ON		ARL.ARTIFACT_LINK_TYPE_ID = ALT.ARTIFACT_LINK_TYPE_ID INNER JOIN TST_INCIDENT_STATUS STA
    ON		INC.INCIDENT_STATUS_ID = STA.INCIDENT_STATUS_ID
	WHERE	ARL.SOURCE_ARTIFACT_TYPE_ID = @ArtifactTypeId
	AND		ARL.SOURCE_ARTIFACT_ID = @ArtifactId
	AND		ARL.DEST_ARTIFACT_TYPE_ID = 3
    AND		INC.IS_DELETED = 0
    UNION
    --Direct link from an Incident
	SELECT	ARL.ARTIFACT_LINK_ID, ARL.SOURCE_ARTIFACT_ID AS ARTIFACT_ID, ARL.SOURCE_ARTIFACT_TYPE_ID AS ARTIFACT_TYPE_ID,
			ARL.CREATOR_ID, ARL.CREATION_DATE, ARL.COMMENT, INC.NAME AS ARTIFACT_NAME, ART.NAME AS ARTIFACT_TYPE_NAME,
			(RTRIM(USR.FIRST_NAME + ' ' + ISNULL(USR.MIDDLE_INITIAL,'')) + ' ' + USR.LAST_NAME) AS CREATOR_NAME,
    		ALT.ARTIFACT_LINK_TYPE_ID, ALT.REVERSE_NAME AS ARTIFACT_LINK_TYPE_NAME, STA.NAME AS ARTIFACT_STATUS_NAME,
    		INC.PROJECT_ID
	FROM	TST_ARTIFACT_LINK ARL INNER JOIN TST_ARTIFACT_TYPE ART
	ON		ARL.SOURCE_ARTIFACT_TYPE_ID = ART.ARTIFACT_TYPE_ID LEFT JOIN TST_USER_PROFILE USR
	ON		ARL.CREATOR_ID = USR.USER_ID INNER JOIN TST_INCIDENT INC
	ON		ARL.SOURCE_ARTIFACT_ID = INC.INCIDENT_ID INNER JOIN TST_ARTIFACT_LINK_TYPE ALT
    ON		ARL.ARTIFACT_LINK_TYPE_ID = ALT.ARTIFACT_LINK_TYPE_ID INNER JOIN TST_INCIDENT_STATUS STA
    ON		INC.INCIDENT_STATUS_ID = STA.INCIDENT_STATUS_ID
	WHERE	ARL.DEST_ARTIFACT_TYPE_ID = @ArtifactTypeId
	AND		ARL.DEST_ARTIFACT_ID = @ArtifactId
	AND		ARL.SOURCE_ARTIFACT_TYPE_ID = 3
    AND    INC.IS_DELETED = 0
    UNION
	--Direct link to a Risk
	SELECT	ARL.ARTIFACT_LINK_ID, ARL.DEST_ARTIFACT_ID AS ARTIFACT_ID, ARL.DEST_ARTIFACT_TYPE_ID AS ARTIFACT_TYPE_ID,
			ARL.CREATOR_ID, ARL.CREATION_DATE, ARL.COMMENT, RSK.NAME AS ARTIFACT_NAME, ART.NAME AS ARTIFACT_TYPE_NAME,
			(RTRIM(USR.FIRST_NAME + ' ' + ISNULL(USR.MIDDLE_INITIAL,'')) + ' ' + USR.LAST_NAME) AS CREATOR_NAME,
    		ALT.ARTIFACT_LINK_TYPE_ID, ALT.NAME AS ARTIFACT_LINK_TYPE_NAME, STA.NAME AS ARTIFACT_STATUS_NAME,
    		RSK.PROJECT_ID
	FROM	TST_ARTIFACT_LINK ARL INNER JOIN TST_ARTIFACT_TYPE ART
	ON		ARL.DEST_ARTIFACT_TYPE_ID = ART.ARTIFACT_TYPE_ID LEFT JOIN TST_USER_PROFILE USR
	ON		ARL.CREATOR_ID = USR.USER_ID INNER JOIN TST_RISK RSK
	ON		ARL.DEST_ARTIFACT_ID = RSK.RISK_ID INNER JOIN TST_ARTIFACT_LINK_TYPE ALT
    ON		ARL.ARTIFACT_LINK_TYPE_ID = ALT.ARTIFACT_LINK_TYPE_ID INNER JOIN TST_RISK_STATUS STA
    ON		RSK.RISK_STATUS_ID = STA.RISK_STATUS_ID
	WHERE	ARL.SOURCE_ARTIFACT_TYPE_ID = @ArtifactTypeId
	AND		ARL.SOURCE_ARTIFACT_ID = @ArtifactId
	AND		ARL.DEST_ARTIFACT_TYPE_ID = 14
    AND		RSK.IS_DELETED = 0
    UNION
    --Direct link from a Risk
	SELECT	ARL.ARTIFACT_LINK_ID, ARL.SOURCE_ARTIFACT_ID AS ARTIFACT_ID, ARL.SOURCE_ARTIFACT_TYPE_ID AS ARTIFACT_TYPE_ID,
			ARL.CREATOR_ID, ARL.CREATION_DATE, ARL.COMMENT, RSK.NAME AS ARTIFACT_NAME, ART.NAME AS ARTIFACT_TYPE_NAME,
			(RTRIM(USR.FIRST_NAME + ' ' + ISNULL(USR.MIDDLE_INITIAL,'')) + ' ' + USR.LAST_NAME) AS CREATOR_NAME,
    		ALT.ARTIFACT_LINK_TYPE_ID, ALT.REVERSE_NAME AS ARTIFACT_LINK_TYPE_NAME, STA.NAME AS ARTIFACT_STATUS_NAME,
    		RSK.PROJECT_ID
	FROM	TST_ARTIFACT_LINK ARL INNER JOIN TST_ARTIFACT_TYPE ART
	ON		ARL.SOURCE_ARTIFACT_TYPE_ID = ART.ARTIFACT_TYPE_ID LEFT JOIN TST_USER_PROFILE USR
	ON		ARL.CREATOR_ID = USR.USER_ID INNER JOIN TST_RISK RSK
	ON		ARL.SOURCE_ARTIFACT_ID = RSK.RISK_ID INNER JOIN TST_ARTIFACT_LINK_TYPE ALT
    ON		ARL.ARTIFACT_LINK_TYPE_ID = ALT.ARTIFACT_LINK_TYPE_ID INNER JOIN TST_RISK_STATUS STA
    ON		RSK.RISK_STATUS_ID = STA.RISK_STATUS_ID
	WHERE	ARL.DEST_ARTIFACT_TYPE_ID = @ArtifactTypeId
	AND		ARL.DEST_ARTIFACT_ID = @ArtifactId
	AND		ARL.SOURCE_ARTIFACT_TYPE_ID = 14
    AND     RSK.IS_DELETED = 0
    UNION
	--Direct link to a Test Case
	SELECT	ARL.ARTIFACT_LINK_ID, ARL.DEST_ARTIFACT_ID AS ARTIFACT_ID, ARL.DEST_ARTIFACT_TYPE_ID AS ARTIFACT_TYPE_ID,
			ARL.CREATOR_ID, ARL.CREATION_DATE, ARL.COMMENT, TSC.NAME AS ARTIFACT_NAME, ART.NAME AS ARTIFACT_TYPE_NAME,
			(RTRIM(USR.FIRST_NAME + ' ' + ISNULL(USR.MIDDLE_INITIAL,'')) + ' ' + USR.LAST_NAME) AS CREATOR_NAME,
    		ALT.ARTIFACT_LINK_TYPE_ID, ALT.NAME AS ARTIFACT_LINK_TYPE_NAME, STA.NAME AS ARTIFACT_STATUS_NAME,
    		TSC.PROJECT_ID
	FROM	TST_ARTIFACT_LINK ARL INNER JOIN TST_ARTIFACT_TYPE ART
	ON		ARL.DEST_ARTIFACT_TYPE_ID = ART.ARTIFACT_TYPE_ID LEFT JOIN TST_USER_PROFILE USR
	ON		ARL.CREATOR_ID = USR.USER_ID INNER JOIN TST_TEST_CASE TSC
	ON		ARL.DEST_ARTIFACT_ID = TSC.TEST_CASE_ID INNER JOIN TST_ARTIFACT_LINK_TYPE ALT
    ON		ARL.ARTIFACT_LINK_TYPE_ID = ALT.ARTIFACT_LINK_TYPE_ID INNER JOIN TST_TEST_CASE_STATUS STA
    ON		TSC.TEST_CASE_STATUS_ID = STA.TEST_CASE_STATUS_ID
	WHERE	ARL.SOURCE_ARTIFACT_TYPE_ID = @ArtifactTypeId
	AND		ARL.SOURCE_ARTIFACT_ID = @ArtifactId
	AND		ARL.DEST_ARTIFACT_TYPE_ID = 2
    AND		TSC.IS_DELETED = 0
    UNION
    --Direct link from a Test Case
	SELECT	ARL.ARTIFACT_LINK_ID, ARL.SOURCE_ARTIFACT_ID AS ARTIFACT_ID, ARL.SOURCE_ARTIFACT_TYPE_ID AS ARTIFACT_TYPE_ID,
			ARL.CREATOR_ID, ARL.CREATION_DATE, ARL.COMMENT, TSC.NAME AS ARTIFACT_NAME, ART.NAME AS ARTIFACT_TYPE_NAME,
			(RTRIM(USR.FIRST_NAME + ' ' + ISNULL(USR.MIDDLE_INITIAL,'')) + ' ' + USR.LAST_NAME) AS CREATOR_NAME,
    		ALT.ARTIFACT_LINK_TYPE_ID, ALT.REVERSE_NAME AS ARTIFACT_LINK_TYPE_NAME, STA.NAME AS ARTIFACT_STATUS_NAME,
    		TSC.PROJECT_ID
	FROM	TST_ARTIFACT_LINK ARL INNER JOIN TST_ARTIFACT_TYPE ART
	ON		ARL.SOURCE_ARTIFACT_TYPE_ID = ART.ARTIFACT_TYPE_ID LEFT JOIN TST_USER_PROFILE USR
	ON		ARL.CREATOR_ID = USR.USER_ID INNER JOIN TST_TEST_CASE TSC
	ON		ARL.SOURCE_ARTIFACT_ID = TSC.TEST_CASE_ID INNER JOIN TST_ARTIFACT_LINK_TYPE ALT
    ON		ARL.ARTIFACT_LINK_TYPE_ID = ALT.ARTIFACT_LINK_TYPE_ID INNER JOIN TST_TEST_CASE_STATUS STA
    ON		TSC.TEST_CASE_STATUS_ID = STA.TEST_CASE_STATUS_ID
	WHERE	ARL.DEST_ARTIFACT_TYPE_ID = @ArtifactTypeId
	AND		ARL.DEST_ARTIFACT_ID = @ArtifactId
	AND		ARL.SOURCE_ARTIFACT_TYPE_ID = 2
    AND     TSC.IS_DELETED = 0
    UNION
	--Direct link to a Task
	SELECT	ARL.ARTIFACT_LINK_ID, ARL.DEST_ARTIFACT_ID AS ARTIFACT_ID, ARL.DEST_ARTIFACT_TYPE_ID AS ARTIFACT_TYPE_ID,
			ARL.CREATOR_ID, ARL.CREATION_DATE, ARL.COMMENT, TSK.NAME AS ARTIFACT_NAME, ART.NAME AS ARTIFACT_TYPE_NAME,
			(RTRIM(USR.FIRST_NAME + ' ' + ISNULL(USR.MIDDLE_INITIAL,'')) + ' ' + USR.LAST_NAME) AS CREATOR_NAME,
    		ALT.ARTIFACT_LINK_TYPE_ID, ALT.NAME AS ARTIFACT_LINK_TYPE_NAME, STA.NAME AS ARTIFACT_STATUS_NAME,
    		TSK.PROJECT_ID
	FROM	TST_ARTIFACT_LINK ARL INNER JOIN TST_ARTIFACT_TYPE ART
	ON		ARL.DEST_ARTIFACT_TYPE_ID = ART.ARTIFACT_TYPE_ID LEFT JOIN TST_USER_PROFILE USR
	ON		ARL.CREATOR_ID = USR.USER_ID INNER JOIN TST_TASK TSK
	ON		ARL.DEST_ARTIFACT_ID = TSK.TASK_ID INNER JOIN TST_ARTIFACT_LINK_TYPE ALT
    ON		ARL.ARTIFACT_LINK_TYPE_ID = ALT.ARTIFACT_LINK_TYPE_ID INNER JOIN TST_TASK_STATUS STA
    ON		TSK.TASK_STATUS_ID = STA.TASK_STATUS_ID
	WHERE	ARL.SOURCE_ARTIFACT_TYPE_ID = @ArtifactTypeId
	AND		ARL.SOURCE_ARTIFACT_ID = @ArtifactId
	AND		ARL.DEST_ARTIFACT_TYPE_ID = 6
    AND		TSK.IS_DELETED = 0
    UNION
    --Direct link from a Task
	SELECT	ARL.ARTIFACT_LINK_ID, ARL.SOURCE_ARTIFACT_ID AS ARTIFACT_ID, ARL.SOURCE_ARTIFACT_TYPE_ID AS ARTIFACT_TYPE_ID,
			ARL.CREATOR_ID, ARL.CREATION_DATE, ARL.COMMENT, TSK.NAME AS ARTIFACT_NAME, ART.NAME AS ARTIFACT_TYPE_NAME,
			(RTRIM(USR.FIRST_NAME + ' ' + ISNULL(USR.MIDDLE_INITIAL,'')) + ' ' + USR.LAST_NAME) AS CREATOR_NAME,
    		ALT.ARTIFACT_LINK_TYPE_ID, ALT.REVERSE_NAME AS ARTIFACT_LINK_TYPE_NAME, STA.NAME AS ARTIFACT_STATUS_NAME,
    		TSK.PROJECT_ID
	FROM	TST_ARTIFACT_LINK ARL INNER JOIN TST_ARTIFACT_TYPE ART
	ON		ARL.SOURCE_ARTIFACT_TYPE_ID = ART.ARTIFACT_TYPE_ID LEFT JOIN TST_USER_PROFILE USR
	ON		ARL.CREATOR_ID = USR.USER_ID INNER JOIN TST_TASK TSK
	ON		ARL.SOURCE_ARTIFACT_ID = TSK.TASK_ID INNER JOIN TST_ARTIFACT_LINK_TYPE ALT
    ON		ARL.ARTIFACT_LINK_TYPE_ID = ALT.ARTIFACT_LINK_TYPE_ID INNER JOIN TST_TASK_STATUS STA
    ON		TSK.TASK_STATUS_ID = STA.TASK_STATUS_ID
	WHERE	ARL.DEST_ARTIFACT_TYPE_ID = @ArtifactTypeId
	AND		ARL.DEST_ARTIFACT_ID = @ArtifactId
	AND		ARL.SOURCE_ARTIFACT_TYPE_ID = 6
    AND		TSK.IS_DELETED = 0
    UNION
    --Direct link from a Task to a Test Run
	SELECT	ARL.ARTIFACT_LINK_ID, ARL.DEST_ARTIFACT_ID AS ARTIFACT_ID, ARL.DEST_ARTIFACT_TYPE_ID AS ARTIFACT_TYPE_ID,
			ARL.CREATOR_ID, ARL.CREATION_DATE, ARL.COMMENT, TRN.NAME AS ARTIFACT_NAME, ART.NAME AS ARTIFACT_TYPE_NAME,
			(RTRIM(USR.FIRST_NAME + ' ' + ISNULL(USR.MIDDLE_INITIAL,'')) + ' ' + USR.LAST_NAME) AS CREATOR_NAME,
    		ALT.ARTIFACT_LINK_TYPE_ID, ALT.REVERSE_NAME AS ARTIFACT_LINK_TYPE_NAME, STA.NAME AS ARTIFACT_STATUS_NAME,
    		TST.PROJECT_ID
	FROM	TST_ARTIFACT_LINK ARL INNER JOIN TST_ARTIFACT_TYPE ART
	ON		ARL.DEST_ARTIFACT_TYPE_ID = ART.ARTIFACT_TYPE_ID LEFT JOIN TST_USER_PROFILE USR
	ON		ARL.CREATOR_ID = USR.USER_ID INNER JOIN TST_TEST_RUN TRN
	ON		ARL.DEST_ARTIFACT_ID = TRN.TEST_RUN_ID INNER JOIN TST_ARTIFACT_LINK_TYPE ALT
    ON		ARL.ARTIFACT_LINK_TYPE_ID = ALT.ARTIFACT_LINK_TYPE_ID INNER JOIN TST_EXECUTION_STATUS STA
    ON		TRN.EXECUTION_STATUS_ID = STA.EXECUTION_STATUS_ID INNER JOIN TST_TEST_CASE TST
    ON		TRN.TEST_CASE_ID = TST.TEST_CASE_ID
	WHERE	ARL.SOURCE_ARTIFACT_TYPE_ID = @ArtifactTypeId
	AND		ARL.SOURCE_ARTIFACT_ID = @ArtifactId
	AND		ARL.DEST_ARTIFACT_TYPE_ID = 5
    AND		TST.IS_DELETED = 0
    UNION
	--Direct link to a Task
	SELECT	ARL.ARTIFACT_LINK_ID, ARL.DEST_ARTIFACT_ID AS ARTIFACT_ID, ARL.DEST_ARTIFACT_TYPE_ID AS ARTIFACT_TYPE_ID,
			ARL.CREATOR_ID, ARL.CREATION_DATE, ARL.COMMENT, TSK.NAME AS ARTIFACT_NAME, ART.NAME AS ARTIFACT_TYPE_NAME,
			(RTRIM(USR.FIRST_NAME + ' ' + ISNULL(USR.MIDDLE_INITIAL,'')) + ' ' + USR.LAST_NAME) AS CREATOR_NAME,
    		ALT.ARTIFACT_LINK_TYPE_ID, ALT.NAME AS ARTIFACT_LINK_TYPE_NAME, STA.NAME AS ARTIFACT_STATUS_NAME,
    		TSK.PROJECT_ID
	FROM	TST_ARTIFACT_LINK ARL INNER JOIN TST_ARTIFACT_TYPE ART
	ON		ARL.DEST_ARTIFACT_TYPE_ID = ART.ARTIFACT_TYPE_ID LEFT JOIN TST_USER_PROFILE USR
	ON		ARL.CREATOR_ID = USR.USER_ID INNER JOIN TST_TASK TSK
	ON		ARL.DEST_ARTIFACT_ID = TSK.TASK_ID INNER JOIN TST_ARTIFACT_LINK_TYPE ALT
    ON		ARL.ARTIFACT_LINK_TYPE_ID = ALT.ARTIFACT_LINK_TYPE_ID INNER JOIN TST_TASK_STATUS STA
    ON		TSK.TASK_STATUS_ID = STA.TASK_STATUS_ID
	WHERE	ARL.SOURCE_ARTIFACT_TYPE_ID = @ArtifactTypeId
	AND		ARL.SOURCE_ARTIFACT_ID = @ArtifactId
	AND		ARL.DEST_ARTIFACT_TYPE_ID = 6
    AND		TSK.IS_DELETED = 0

	--Now we need to handle any 'implicit/indirect' joins

	--For the case of Requirements linked to Incidents (and vice-versa) we need to create a special
	--query that adds the list of incidents linked indirectly to requirements via  test runs and
	--test case coverage relationships. To distinguish them from each other we use a negative number
	--for the artifact-link-id to denote that it's not a direct link that can be edited.
	UNION
	SELECT	-INC.INCIDENT_ID AS ARTIFACT_LINK_ID, INC.INCIDENT_ID AS ARTIFACT_ID, ART.ARTIFACT_TYPE_ID,
			INC.OPENER_ID AS CREATOR_ID, INC.CREATION_DATE, 'Test Run: ' + TRN.NAME AS COMMENT, INC.NAME AS ARTIFACT_NAME, ART.NAME AS ARTIFACT_TYPE_NAME,
			(RTRIM(USR.FIRST_NAME + ' ' + ISNULL(USR.MIDDLE_INITIAL,'')) + ' ' + USR.LAST_NAME) AS CREATOR_NAME,
			ALT.ARTIFACT_LINK_TYPE_ID, ALT.NAME AS ARTIFACT_LINK_TYPE_NAME, STA.NAME AS ARTIFACT_STATUS_NAME, INC.PROJECT_ID
	FROM	TST_REQUIREMENT REQ INNER JOIN TST_REQUIREMENT_TEST_CASE RTC
	ON		REQ.REQUIREMENT_ID = RTC.REQUIREMENT_ID INNER JOIN TST_TEST_RUN TRN
	ON		RTC.TEST_CASE_ID = TRN.TEST_CASE_ID INNER JOIN TST_TEST_RUN_STEP TRS
	ON		TRN.TEST_RUN_ID = TRS.TEST_RUN_ID INNER JOIN TST_TEST_RUN_STEP_INCIDENT TRI	
    ON		TRS.TEST_RUN_STEP_ID = TRI.TEST_RUN_STEP_ID INNER JOIN TST_INCIDENT INC
    ON		TRI.INCIDENT_ID = INC.INCIDENT_ID INNER JOIN TST_USER_PROFILE USR
	ON		INC.OPENER_ID = USR.USER_ID INNER JOIN TST_ARTIFACT_TYPE ART
	ON		ART.ARTIFACT_TYPE_ID = 3 INNER JOIN TST_ARTIFACT_LINK_TYPE ALT
    ON		ALT.ARTIFACT_LINK_TYPE_ID = 3 INNER JOIN TST_INCIDENT_STATUS STA
    ON		INC.INCIDENT_STATUS_ID = STA.INCIDENT_STATUS_ID
	WHERE	@ArtifactTypeId = 1
	AND		REQ.REQUIREMENT_ID = @ArtifactId
    AND		INC.IS_DELETED = 0
	
    --For incidents we also need to pull back any test runs (test run steps) as well as
    --directly linked test steps
    --To avoid the test run id potentially colliding with the requirement id we
    --multiply by 10 and add the artifact type id (1)
    UNION
    SELECT	((-REQ.REQUIREMENT_ID * 10) + 1) AS ARTIFACT_LINK_ID, REQ.REQUIREMENT_ID AS ARTIFACT_ID, ART.ARTIFACT_TYPE_ID,
    		REQ.AUTHOR_ID AS CREATOR_ID, REQ.CREATION_DATE, 'Test Run: ' + TRN.NAME AS COMMENT, REQ.NAME AS ARTIFACT_NAME, ART.NAME AS ARTIFACT_TYPE_NAME,
    		(RTRIM(USR.FIRST_NAME + ' ' + ISNULL(USR.MIDDLE_INITIAL,'')) + ' ' + USR.LAST_NAME) AS CREATOR_NAME,
			ALT.ARTIFACT_LINK_TYPE_ID, ALT.REVERSE_NAME AS ARTIFACT_LINK_TYPE_NAME, STA.NAME AS ARTIFACT_STATUS_NAME, REQ.PROJECT_ID
    FROM	TST_REQUIREMENT REQ INNER JOIN TST_REQUIREMENT_TEST_CASE RTC
    ON		REQ.REQUIREMENT_ID = RTC.REQUIREMENT_ID INNER JOIN TST_TEST_RUN TRN
    ON		RTC.TEST_CASE_ID = TRN.TEST_CASE_ID INNER JOIN TST_TEST_RUN_STEP TRS
    ON		TRN.TEST_RUN_ID = TRS.TEST_RUN_ID INNER JOIN TST_TEST_RUN_STEP_INCIDENT TRI	
    ON		TRS.TEST_RUN_STEP_ID = TRI.TEST_RUN_STEP_ID INNER JOIN TST_INCIDENT INC
    ON		TRI.INCIDENT_ID = INC.INCIDENT_ID INNER JOIN TST_USER_PROFILE USR
    ON		REQ.AUTHOR_ID = USR.USER_ID INNER JOIN TST_ARTIFACT_TYPE ART
	ON		ART.ARTIFACT_TYPE_ID = 1 INNER JOIN TST_ARTIFACT_LINK_TYPE ALT
    ON		ALT.ARTIFACT_LINK_TYPE_ID = 3 INNER JOIN TST_REQUIREMENT_STATUS STA
    ON		REQ.REQUIREMENT_STATUS_ID = STA.REQUIREMENT_STATUS_ID
    WHERE	@ArtifactTypeId = 3
    AND		INC.INCIDENT_ID = @ArtifactId
    AND		REQ.IS_DELETED = 0
    UNION
    SELECT	((-TRS.TEST_RUN_ID * 10) + 5) AS ARTIFACT_LINK_ID, TRS.TEST_RUN_ID AS ARTIFACT_ID, ART.ARTIFACT_TYPE_ID,
    		TRN.TESTER_ID AS CREATOR_ID, TRN.START_DATE, 'Test Run: ' + TRN.NAME AS COMMENT, TRN.NAME AS ARTIFACT_NAME, ART.NAME AS ARTIFACT_TYPE_NAME,
    		(RTRIM(USR.FIRST_NAME + ' ' + ISNULL(USR.MIDDLE_INITIAL,'')) + ' ' + USR.LAST_NAME) AS CREATOR_NAME,
			ALT.ARTIFACT_LINK_TYPE_ID, ALT.REVERSE_NAME AS ARTIFACT_LINK_TYPE_NAME, STA.NAME AS ARTIFACT_STATUS_NAME, TST.PROJECT_ID
    FROM	TST_TEST_RUN_STEP TRS INNER JOIN TST_TEST_RUN_STEP_INCIDENT TRI
    ON		TRS.TEST_RUN_STEP_ID = TRI.TEST_RUN_STEP_ID INNER JOIN TST_INCIDENT INC
    ON		TRI.INCIDENT_ID = INC.INCIDENT_ID INNER JOIN TST_TEST_RUN TRN
    ON		TRS.TEST_RUN_ID = TRN.TEST_RUN_ID INNER JOIN TST_USER_PROFILE USR
    ON		TRN.TESTER_ID = USR.USER_ID INNER JOIN TST_ARTIFACT_TYPE ART
	ON		ART.ARTIFACT_TYPE_ID = 5 INNER JOIN TST_ARTIFACT_LINK_TYPE ALT
    ON		ALT.ARTIFACT_LINK_TYPE_ID = 3 INNER JOIN TST_EXECUTION_STATUS STA
    ON		TRN.EXECUTION_STATUS_ID = STA.EXECUTION_STATUS_ID INNER JOIN TST_TEST_CASE TST
    ON		TRN.TEST_CASE_ID = TST.TEST_CASE_ID
    WHERE	@ArtifactTypeId = 3
    AND		INC.INCIDENT_ID = @ArtifactId
    UNION
    SELECT	ARL.ARTIFACT_LINK_ID, ARL.SOURCE_ARTIFACT_ID AS ARTIFACT_ID, ARL.SOURCE_ARTIFACT_TYPE_ID AS ARTIFACT_TYPE_ID,
    		ARL.CREATOR_ID, ARL.CREATION_DATE, ARL.COMMENT, (TST.NAME + ' (Step ' + CAST (dbo.FN_TESTSTEP_RETRIEVE_STEP_NUMBER(TST.TEST_CASE_ID, STP.TEST_STEP_ID) AS NVARCHAR) + ')') AS ARTIFACT_NAME,
    		ART.NAME AS ARTIFACT_TYPE_NAME,
    		(RTRIM(USR.FIRST_NAME + ' ' + ISNULL(USR.MIDDLE_INITIAL,'')) + ' ' + USR.LAST_NAME) AS CREATOR_NAME,
			ALT.ARTIFACT_LINK_TYPE_ID, ALT.REVERSE_NAME AS ARTIFACT_LINK_TYPE_NAME, STA.NAME AS ARTIFACT_STATUS_NAME, TST.PROJECT_ID
    FROM	TST_ARTIFACT_LINK ARL INNER JOIN TST_ARTIFACT_TYPE ART
    ON		ARL.SOURCE_ARTIFACT_TYPE_ID = ART.ARTIFACT_TYPE_ID LEFT JOIN TST_USER_PROFILE USR
    ON		ARL.CREATOR_ID = USR.USER_ID INNER JOIN TST_TEST_STEP STP
    ON		ARL.SOURCE_ARTIFACT_ID = STP.TEST_STEP_ID INNER JOIN TST_TEST_CASE TST
    ON		STP.TEST_CASE_ID = TST.TEST_CASE_ID INNER JOIN TST_ARTIFACT_LINK_TYPE ALT
    ON		ALT.ARTIFACT_LINK_TYPE_ID = 1 INNER JOIN TST_EXECUTION_STATUS STA
    ON		STP.EXECUTION_STATUS_ID = STA.EXECUTION_STATUS_ID
    WHERE	@ArtifactTypeId = 3
    AND		ARL.DEST_ARTIFACT_TYPE_ID = @ArtifactTypeId
    AND		ARL.DEST_ARTIFACT_ID = @ArtifactId
    AND		ARL.SOURCE_ARTIFACT_TYPE_ID = 7
    AND		STP.IS_DELETED = 0
    AND		TST.IS_DELETED = 0
	
    --For test steps we also need to pull back any incidents linked indirectly via
    --test runs (test run steps) as well as direct links.
    --To distinguish them from each other we use a negative number
    --for the artifact-link-id to denote that it's not a direct link that can be edited.
    UNION
    SELECT	-INC.INCIDENT_ID AS ARTIFACT_LINK_ID, INC.INCIDENT_ID AS ARTIFACT_ID, ART.ARTIFACT_TYPE_ID,
    		INC.OPENER_ID AS CREATOR_ID, INC.CREATION_DATE, 'Test Run: ' + TRN.NAME AS COMMENT, INC.NAME AS ARTIFACT_NAME, ART.NAME AS ARTIFACT_TYPE_NAME,
    		(RTRIM(USR.FIRST_NAME + ' ' + ISNULL(USR.MIDDLE_INITIAL,'')) + ' ' + USR.LAST_NAME) AS CREATOR_NAME,
			ALT.ARTIFACT_LINK_TYPE_ID, ALT.REVERSE_NAME AS ARTIFACT_LINK_TYPE_NAME, STA.NAME AS ARTIFACT_STATUS_NAME, INC.PROJECT_ID
    FROM	TST_TEST_RUN TRN INNER JOIN TST_TEST_RUN_STEP TRS
    ON		TRN.TEST_RUN_ID = TRS.TEST_RUN_ID INNER JOIN TST_TEST_RUN_STEP_INCIDENT TRI
    ON		TRS.TEST_RUN_STEP_ID = TRI.TEST_RUN_STEP_ID INNER JOIN TST_INCIDENT INC
    ON		TRI.INCIDENT_ID = INC.INCIDENT_ID INNER JOIN TST_USER_PROFILE USR
    ON		INC.OPENER_ID = USR.USER_ID INNER JOIN TST_ARTIFACT_TYPE ART
	ON		ART.ARTIFACT_TYPE_ID = 3 INNER JOIN TST_ARTIFACT_LINK_TYPE ALT
    ON		ALT.ARTIFACT_LINK_TYPE_ID = 3 INNER JOIN TST_EXECUTION_STATUS STA
    ON		TRN.EXECUTION_STATUS_ID = STA.EXECUTION_STATUS_ID
    WHERE	@ArtifactTypeId = 7
    AND		TRS.TEST_STEP_ID = @ArtifactId
    AND		INC.IS_DELETED = 0
    
	-- Finally we sort the result

	ORDER BY
		ARL.CREATION_DATE DESC,
		ARL.ARTIFACT_LINK_ID
END
GO
