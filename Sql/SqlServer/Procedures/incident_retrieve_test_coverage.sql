-- =====================================================================
-- Author:			Inflectra Corporation
-- Business Object: Incident
-- Description:		Retrieves the test coverage for all closed incidents
-- =====================================================================
IF OBJECT_ID ( 'INCIDENT_RETRIEVE_TEST_COVERAGE', 'P' ) IS NOT NULL 
    DROP PROCEDURE INCIDENT_RETRIEVE_TEST_COVERAGE;
GO
CREATE PROCEDURE INCIDENT_RETRIEVE_TEST_COVERAGE
	@ProjectId INT,
	@ReleaseId INT
AS
BEGIN
	--Handle the case where no release is specified separately
	IF @ReleaseId IS NULL
	BEGIN
		SELECT COUNT(TIN2.TEST_CASE_ID) AS TestCount, EXE.EXECUTION_STATUS_ID AS ExecutionStatusId, EXE.NAME AS ExecutionStatusName
		FROM VW_EXECUTION_STATUS_ACTIVE EXE LEFT JOIN
			(SELECT TIN.TEST_CASE_ID, TST.EXECUTION_STATUS_ID
			FROM VW_TESTCASE_INCIDENTS TIN INNER JOIN TST_TEST_CASE TST
			ON TIN.TEST_CASE_ID = TST.TEST_CASE_ID
			WHERE TIN.IS_OPEN_STATUS = 0
			AND TST.PROJECT_ID = @ProjectId) TIN2
		ON EXE.EXECUTION_STATUS_ID = TIN2.EXECUTION_STATUS_ID
		GROUP BY EXE.EXECUTION_STATUS_ID, EXE.NAME
		ORDER BY EXE.EXECUTION_STATUS_ID
	END
	ELSE
	BEGIN
		--Declare results set
		DECLARE  @ReleaseList TABLE
		(
			RELEASE_ID INT
		)

		--Populate list of child iterations
		INSERT @ReleaseList (RELEASE_ID)
		SELECT RELEASE_ID FROM FN_RELEASE_GET_SELF_AND_ITERATIONS (@ProjectId, @ReleaseId)

		SELECT COUNT(TIN2.TEST_CASE_ID) AS TestCount, EXE.EXECUTION_STATUS_ID AS ExecutionStatusId, EXE.NAME AS ExecutionStatusName
		FROM VW_EXECUTION_STATUS_ACTIVE EXE LEFT JOIN
			(SELECT TIN.TEST_CASE_ID, ISNULL(TRN.EXECUTION_STATUS_ID,3) AS EXECUTION_STATUS_ID
			FROM VW_TESTCASE_INCIDENTS TIN INNER JOIN TST_TEST_CASE TST
			ON TIN.TEST_CASE_ID = TST.TEST_CASE_ID LEFT JOIN
				(SELECT RUN1.TEST_CASE_ID, MIN(RUN1.EXECUTION_STATUS_ID) AS EXECUTION_STATUS_ID
				FROM TST_TEST_RUN RUN1 LEFT JOIN
					(SELECT TEST_CASE_ID, MAX(END_DATE) AS END_DATE
					FROM TST_TEST_RUN WHERE RELEASE_ID IN (SELECT RELEASE_ID FROM @ReleaseList)
					GROUP BY TEST_CASE_ID) RUN2
				ON RUN1.TEST_CASE_ID = RUN2.TEST_CASE_ID AND RUN1.END_DATE = RUN2.END_DATE
				WHERE RUN1.RELEASE_ID IN (SELECT RELEASE_ID FROM @ReleaseList)
				GROUP BY RUN1.TEST_CASE_ID) TRN
			ON TST.TEST_CASE_ID = TRN.TEST_CASE_ID INNER JOIN TST_RELEASE_TEST_CASE RTC
			ON TST.TEST_CASE_ID = RTC.TEST_CASE_ID AND TIN.RESOLVED_RELEASE_ID = RTC.RELEASE_ID
			WHERE TIN.IS_OPEN_STATUS = 0
			AND TST.PROJECT_ID = @ProjectId
			AND TIN.RESOLVED_RELEASE_ID IN (SELECT RELEASE_ID FROM @ReleaseList)) TIN2
		ON EXE.EXECUTION_STATUS_ID = TIN2.EXECUTION_STATUS_ID
		GROUP BY EXE.EXECUTION_STATUS_ID, EXE.NAME
		ORDER BY EXE.EXECUTION_STATUS_ID
	END
END
GO
