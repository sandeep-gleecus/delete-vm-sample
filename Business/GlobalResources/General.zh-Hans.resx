<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1"/>
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required"/>
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="Global_NoneFlag" xml:space="preserve">
    <value>{无}</value>
  </data>
	<data name="TestRun_VariousTestCases" xml:space="preserve">
    <value>各种测试用例</value>
  </data>
	<data name="Task_ProgressNotStarted" xml:space="preserve">
    <value>未启动</value>
  </data>
	<data name="Task_ProgressPercentComplete" xml:space="preserve">
    <value>完成 %</value>
  </data>
	<data name="Task_ProgressScheduledEndOn" xml:space="preserve">
    <value>计划结束上</value>
  </data>
	<data name="Task_ProgressShouldHaveStartedOn" xml:space="preserve">
    <value>应已开始</value>
  </data>
	<data name="Task_Progress_ShouldHaveFinishedOn" xml:space="preserve">
    <value>应该对已完成</value>
  </data>
	<data name="Global_NoTasks" xml:space="preserve">
    <value>没有任务</value>
  </data>
	<data name="Global_Tasks" xml:space="preserve">
    <value>任务</value>
  </data>
	<data name="Task_NotStarted" xml:space="preserve">
    <value>未启动</value>
  </data>
	<data name="Task_OnSchedule" xml:space="preserve">
    <value>按计划</value>
  </data>
	<data name="Task_RunningLate" xml:space="preserve">
    <value>运行晚了</value>
  </data>
	<data name="Task_StartingLate" xml:space="preserve">
    <value>起步晚了</value>
  </data>
	<data name="TestCase_NewTestCase" xml:space="preserve">
    <value>新测试用例</value>
  </data>
	<data name="TestCase_NewTestCaseComment" xml:space="preserve">
    <value>满足要求的新测试用例</value>
  </data>
	<data name="TestSet_NewTestSetBasedOnRelease" xml:space="preserve">
    <value>基于发布的新测试集</value>
  </data>
	<data name="TestSet_NewTestSetBasedOnRequirements" xml:space="preserve">
    <value>基于所选的满足要求的新测试集</value>
  </data>
	<data name="Requirement_NotCovered" xml:space="preserve">
    <value>不包括</value>
  </data>
	<data name="TestCase_Blocked" xml:space="preserve">
    <value>被阻止</value>
  </data>
	<data name="TestCase_Caution" xml:space="preserve">
    <value>警告：</value>
  </data>
	<data name="TestCase_Failed" xml:space="preserve">
    <value>失败</value>
  </data>
	<data name="TestCase_NotRun" xml:space="preserve">
    <value>不运行</value>
  </data>
	<data name="TestCase_Passed" xml:space="preserve">
    <value>通过</value>
  </data>
	<data name="TestCase_Run" xml:space="preserve">
    <value>运行</value>
  </data>
	<data name="Global_No" xml:space="preserve">
    <value>无</value>
  </data>
	<data name="Global_Yes" xml:space="preserve">
    <value>是</value>
  </data>
	<data name="Global_Copy" xml:space="preserve">
    <value>副本</value>
  </data>
	<data name="Global_CopyOf" xml:space="preserve">
    <value>复制</value>
  </data>
	<data name="Task_Completed" xml:space="preserve">
    <value>已完成</value>
  </data>
	<data name="Requirement_ReqCreatedFromIncident" xml:space="preserve">
    <value>从现有的事件创建的要求。</value>
  </data>
	<data name="TestCase_Call" xml:space="preserve">
    <value>调用</value>
  </data>
	<data name="Incident_Complete" xml:space="preserve">
    <value>完成</value>
  </data>
	<data name="Incident_NotStarted" xml:space="preserve">
    <value>未启动</value>
  </data>
	<data name="Incident_ShouldHaveStartedOn" xml:space="preserve">
    <value>应已开始</value>
  </data>
	<data name="GraphDescription_IncidentAging" xml:space="preserve">
    <value>"事件老化"的图表中显示事件已离开开放系统中的天数</value>
  </data>
	<data name="GraphDescription_IncidentCumulativeCount" xml:space="preserve">
    <value>事件的累积计数图表中显示特定的日期范围内为当前项目中登陆系统的事件的累积总数</value>
  </data>
	<data name="GraphDescription_IncidentOpenCount" xml:space="preserve">
    <value>打开的事件计数图表中显示系统中超过特定日期范围按优先级事件分类打开的当前项目的打开事件的总数</value>
  </data>
	<data name="GraphDescription_IncidentProgressRate" xml:space="preserve">
    <value>事件进展率图表中显示创建并关闭超过特定的日期范围内的事件的总数</value>
  </data>
	<data name="GraphDescription_IncidentSummary" xml:space="preserve">
    <value>事件摘要表中显示目前一个项目有多少事件。事件的数目根据您所指定的标准显示。您可以用X轴来详细说明显示的数据类型，这些事件信息用于数据分组</value>
  </data>
	<data name="GraphDescription_IncidentTurnaround" xml:space="preserve">
    <value>事件周转时间图表中显示事件天数在系统中已经被关闭 （从他们第一次提高的时间）</value>
  </data>
	<data name="GraphDescription_RequirementCoverage" xml:space="preserve">
    <value>根据测试覆盖状态，要求覆盖图显示目前项目中有多少要求</value>
  </data>
	<data name="GraphDescription_RequirementSummary" xml:space="preserve">
    <value>事件摘要表中显示目前一个项目有多少事件。要求的数目根据您所指定的标准显示。您可以用X轴来指定显示的数据类型，这些事件信息用于数据分组</value>
  </data>
	<data name="GraphDescription_TaskBurnDown" xml:space="preserve">
    <value>该任务 Burndown 图显示每个需要发行/迭代的剩余工作。</value>
  </data>
	<data name="GraphDescription_TaskBurnUp" xml:space="preserve">
    <value>任务燃耗图表显示每个的累积增加为每个项目中的任务的日程安排上、 晚开始和后期整理指示的百分比有的释放/迭代的工作中。</value>
  </data>
	<data name="GraphDescription_TaskSummary" xml:space="preserve">
    <value>任务摘要表中显示目前一个项目有多少事件。事件的数目根据您所指定的标准显示。您可以用X轴来详细说明显示的数据类型，这些事件信息用于数据分组</value>
  </data>
	<data name="GraphDescription_TaskVelocity" xml:space="preserve">
    <value>任务速度图显示每个项目发布/或迭代提供总的估计和实际工作量</value>
  </data>
	<data name="GraphDescription_TestCaseSummary" xml:space="preserve">
    <value>测试用例摘要表中显示目前一个项目有多少事件。要求的数目根据您所指定的标准显示。您可以用X轴来指定显示的数据类型，这些事件信息用于数据分组</value>
  </data>
	<data name="GraphDescription_TestRunProgressRate" xml:space="preserve">
    <value>该测试运行进度表显示在一段时间内已经有多少指令被执行，以及记录执行的状态</value>
  </data>
	<data name="GraphDescription_TestRunSummary" xml:space="preserve">
    <value>测试运行摘要表中显示目前一个项目有多少事件。要求的数目根据您所指定的标准显示。您可以用X轴来指定显示的数据类型，这些事件信息用于数据分组</value>
  </data>
	<data name="GraphName_IncidentAging" xml:space="preserve">
    <value>事件老化</value>
  </data>
	<data name="GraphName_IncidentCumulativeCount" xml:space="preserve">
    <value>事件的累积计数</value>
  </data>
	<data name="GraphName_IncidentOpenCount" xml:space="preserve">
    <value>打开事件计数</value>
  </data>
	<data name="GraphName_IncidentProgressRate" xml:space="preserve">
    <value>事故进展率</value>
  </data>
	<data name="GraphName_IncidentSummary" xml:space="preserve">
    <value>事件摘要</value>
  </data>
	<data name="GraphName_IncidentTurnaround" xml:space="preserve">
    <value>事件的周转时间</value>
  </data>
	<data name="GraphName_RequirementCoverage" xml:space="preserve">
    <value>要求覆盖范围</value>
  </data>
	<data name="GraphName_RequirementSummary" xml:space="preserve">
    <value>要求摘要</value>
  </data>
	<data name="GraphName_TaskBurnDown" xml:space="preserve">
    <value>任务 Burndown</value>
  </data>
	<data name="GraphName_TaskBurnUp" xml:space="preserve">
    <value>任务消耗</value>
  </data>
	<data name="GraphName_TaskSummary" xml:space="preserve">
    <value>任务摘要</value>
  </data>
	<data name="GraphName_TaskVelocity" xml:space="preserve">
    <value>任务速度</value>
  </data>
	<data name="GraphName_TestCaseSummary" xml:space="preserve">
    <value>测试用例总结</value>
  </data>
	<data name="GraphName_TestRunProgressRate" xml:space="preserve">
    <value>测试运行的进度率</value>
  </data>
	<data name="GraphName_TestRunSummary" xml:space="preserve">
    <value>测试运行摘要</value>
  </data>
	<data name="Graph_ClosedCount" xml:space="preserve">
    <value>封闭的计数</value>
  </data>
	<data name="Graph_Date" xml:space="preserve">
    <value>日期</value>
  </data>
	<data name="Graph_DiscoveredCount" xml:space="preserve">
    <value>发现的计数</value>
  </data>
	<data name="Graph_OpenCount" xml:space="preserve">
    <value>开放的计数</value>
  </data>
	<data name="Graph_TotalCount" xml:space="preserve">
    <value>总数</value>
  </data>
	<data name="Global_None" xml:space="preserve">
    <value>(无)</value>
  </data>
	<data name="GraphDescription_TestSetSummary" xml:space="preserve">
    <value>测试设置摘要表中显示目前一个项目有多少事件。要求的数目根据您所指定的标准显示。您可以用X轴来指定显示的数据类型，这些事件信息用于数据分组</value>
  </data>
	<data name="GraphName_TestSetSummary" xml:space="preserve">
    <value>测试设置的摘要</value>
  </data>
	<data name="Graph_Age" xml:space="preserve">
    <value>年龄</value>
  </data>
	<data name="Graph_Turnaround" xml:space="preserve">
    <value>转变</value>
  </data>
	<data name="Graph_Iteration" xml:space="preserve">
    <value>迭代</value>
  </data>
	<data name="Graph_Release" xml:space="preserve">
    <value>发行</value>
  </data>
	<data name="Graphs_CompletedEffort" xml:space="preserve">
    <value>已完成的工作</value>
  </data>
	<data name="Graphs_EstimatedEffort" xml:space="preserve">
    <value>估计的工作</value>
  </data>
	<data name="Graphs_IdealEffort" xml:space="preserve">
    <value>理想的工作</value>
  </data>
	<data name="Graphs_RemainingEffort" xml:space="preserve">
    <value>剩余的工作</value>
  </data>
	<data name="Graphs_ActualVelocity" xml:space="preserve">
    <value>实际速度</value>
  </data>
	<data name="Graphs_ExpectedVelocity" xml:space="preserve">
    <value>预期的速度</value>
  </data>
	<data name="Graph_Start" xml:space="preserve">
    <value>启动</value>
  </data>
	<data name="Graph_CoverageStatus" xml:space="preserve">
    <value>覆盖状态</value>
  </data>
	<data name="Project_ResourceAllocated" xml:space="preserve">
    <value>资源分配</value>
  </data>
	<data name="Requirement_NewRequirement" xml:space="preserve">
    <value>新规定</value>
  </data>
	<data name="Requirement_NewRequirementComment" xml:space="preserve">
    <value>从测试用例创建的新要求</value>
  </data>
	<data name="Global_Incident" xml:space="preserve">
    <value>事件</value>
  </data>
	<data name="Workflow_ChangeStatusSubject" xml:space="preserve">
    <value>更改后的状态，从 '{0}' 到 '{1}'</value>
  </data>
	<data name="Global_ImportedFrom" xml:space="preserve">
    <value>从项目导入 # {0} {1} # 2 {0}</value>
  </data>
	<data name="Global_ExportedTo" xml:space="preserve">
    <value>导出项目 # {0} {1} # 2 {0}</value>
  </data>
	<data name="Workflow_DefaultWorflow" xml:space="preserve">默认工作流</data><data name="TestStep_Step" xml:space="preserve">步骤</data><data name="Global_Revision" xml:space="preserve">修改</data><data name="Global_Report" xml:space="preserve">报告</data><data name="Workflow_DefaultWorflow" xml:space="preserve"><value>默认工作流</value></data><data name="TestStep_Step" xml:space="preserve"><value>步骤</value></data><data name="Global_Revision" xml:space="preserve"><value>修改</value></data><data name="Global_Report" xml:space="preserve"><value>报告</value></data></root>
