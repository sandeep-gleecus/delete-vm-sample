<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAQAAAAAADoAgAAJgAAACAgAAAAAAAAqAgAAA4DAAAoAAAAIAAAAEAAAAABAAQAAAAAAIAC
        AAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAMDAwACAgIAAAAD/AAD/
        AAAA//8A/wAAAP8A/wD//wAA////AAAAAAAAAAAIiAAAAAAAAAAAAAAAAAAIh3u7oAAAAAAAAIf38AAA
        j393u6qgAAAAAACPf3CACHj3+7qqdwAAAAAAh/fweAiHj3e6p3cAAAAAAI9/cIeIeHj3und+4AAAAACH
        9/B4h4eHgAp+7uAAAAAAj39wh4h4eA/w7udwAAAAAIf38HiHd+4P8IeHgAAAAACPf3CHh+564Ah4eHAA
        AAAAj//weI7nruv/h4eAAAAAAI//8IeIeu7r9/h4AAAAAACP//B4eK7uu39/hwd3dwAAj//wd3eO67t3
        9/AAAHeAAI//8Hd3CIu7d3AIiIh3gACP//B3dw/4iIiP/////4AAiIiAd3cIiIiIiIiIiIeAAIiIgHd3
        AAAAAAAAAAAAcAj///gHdwh3d3d3d3d3eACIiIiIgHcI/////////3gAAAAIiIgHCPRERERERE94AAAA
        AIiIgAj053ZmbMxPeAAAAAAI//8I9P53ZmbMT3gAAAAAAIiIgPTv53ZmbE94AAAAAAAAAAj0/v53ZmZP
        eAAAAAAAAAAI9O/v53ZmT3gAAAAAAAAACPR+/v53Zk94AAAAAAAAAAj0d+/v53ZPeAAAAAAAAAAI9Hd+
        /v53T3gAAAAAAAAACPRERERERE94AAAAAAAAAAj/////////eAAAAAAAAAAAiIiIiIiIiIgA//4H/8D4
        Af/AcAD/wCAAf8AAAH/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAADwAAAAcAAAADAAAAAwAAAAMAA
        AADAAAAAgAAAAQAAAAH4AAAB/AAAAf4AAAH/AAAB//gAAf/4AAH/+AAB//gAAf/4AAH/+AAB//gAAf/8
        AAMoAAAAIAAAAEAAAAABAAgAAAAAAIAEAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAA
        AACAAIAAgIAAAMDAwADA3MAA8MqmANTw/wCx4v8AjtT/AGvG/wBIuP8AJar/AACq/wAAktwAAHq5AABi
        lgAASnMAADJQANTj/wCxx/8Ajqv/AGuP/wBIc/8AJVf/AABV/wAASdwAAD25AAAxlgAAJXMAABlQANTU
        /wCxsf8Ajo7/AGtr/wBISP8AJSX/AAAA/gAAANwAAAC5AAAAlgAAAHMAAABQAOPU/wDHsf8Aq47/AI9r
        /wBzSP8AVyX/AFUA/wBJANwAPQC5ADEAlgAlAHMAGQBQAPDU/wDisf8A1I7/AMZr/wC4SP8AqiX/AKoA
        /wCSANwAegC5AGIAlgBKAHMAMgBQAP/U/wD/sf8A/47/AP9r/wD/SP8A/yX/AP4A/gDcANwAuQC5AJYA
        lgBzAHMAUABQAP/U8AD/seIA/47UAP9rxgD/SLgA/yWqAP8AqgDcAJIAuQB6AJYAYgBzAEoAUAAyAP/U
        4wD/sccA/46rAP9rjwD/SHMA/yVXAP8AVQDcAEkAuQA9AJYAMQBzACUAUAAZAP/U1AD/sbEA/46OAP9r
        awD/SEgA/yUlAP4AAADcAAAAuQAAAJYAAABzAAAAUAAAAP/j1AD/x7EA/6uOAP+PawD/c0gA/1clAP9V
        AADcSQAAuT0AAJYxAABzJQAAUBkAAP/w1AD/4rEA/9SOAP/GawD/uEgA/6olAP+qAADckgAAuXoAAJZi
        AABzSgAAUDIAAP//1AD//7EA//+OAP//awD//0gA//8lAP7+AADc3AAAubkAAJaWAABzcwAAUFAAAPD/
        1ADi/7EA1P+OAMb/awC4/0gAqv8lAKr/AACS3AAAerkAAGKWAABKcwAAMlAAAOP/1ADH/7EAq/+OAI//
        awBz/0gAV/8lAFX/AABJ3AAAPbkAADGWAAAlcwAAGVAAANT/1ACx/7EAjv+OAGv/awBI/0gAJf8lAAD+
        AAAA3AAAALkAAACWAAAAcwAAAFAAANT/4wCx/8cAjv+rAGv/jwBI/3MAJf9XAAD/VQAA3EkAALk9AACW
        MQAAcyUAAFAZANT/8ACx/+IAjv/UAGv/xgBI/7gAJf+qAAD/qgAA3JIAALl6AACWYgAAc0oAAFAyANT/
        /wCx//8Ajv//AGv//wBI//8AJf//AAD+/gAA3NwAALm5AACWlgAAc3MAAFBQAPLy8gDm5uYA2traAM7O
        zgDCwsIAtra2AKqqqgCenp4AkpKSAIaGhgB6enoAbm5uAGJiYgBWVlYASkpKAD4+PgAyMjIAJiYmABoa
        GgAODg4A8Pv/AKSgoACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AAAAAAAAAAAAAAAAAAAA
        AO/v7/Ly8gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO/v5eXYspWJ8vIAAAAAAAAAAAAAAOvl/+X/AAAA
        AADv5ubl5diylYmXnPIAAAAAAAAAAAAA6//l/+UA6wAA7+fm5ubl2JWJl5ycnPIAAAAAAAAAAADr5f/l
        /wD36wDt5+fm5uXYiZecnOPj8gAAAAAAAAAAAOv/5f/lAOv37+fn5+fm5eWXnOPj4+Pj8gAAAAAAAAAA
        6+X/5f8A9+vv5efn5+fmAADj4+Pn5+fyAAAAAAAAAADr/+X/5QDr9+/l5eXn5wD//wDr6+vn5/IAAAAA
        AAAAAOvl/+X/APfr7+np6enpAP//AOTk6+vr8gAAAAAAAAAA6//l/+UA6/fv4+OcnJWVAADn9//k5+fy
        AAAAAAAAAADr/////wD36+/jnJWVienpzef35v/k5PIAAAAAAAAAAOv/////AOv36++VlYnpqdjN5+f3
        5v/yAAAAAAAAAAAA6/////8A9+v375WJienY2M3N5/f35vLm5ubm5gAAAADr/////wD39/f374npqdjN
        zc3n5/fyAAAAAObn6wAAAOv/////APf39/cA7e2p2M3Nzefy8uvr6+vr5ubrAAAA6/////8A9/f39wD/
        /+rq6urt7f///////////+sAAADr6+vr6wD39/f3AOvr6+vr6+vr6+vr6+vr6+vn6wAAAO/v7+/vAPf3
        9/cAAAAAAAAAAAAAAAAAAAAAAADn9QDr///////vAPf39wDr5ubm5ubm5ubm5ubm5ubm6wAA6+vr6+vr
        6+/vAPf3AOv//////////////////+brAAAAAAAAAOvv7+/vAPcA6/8EBAQEBAQEBAQEBAT/5usAAAAA
        AAAAAOvv7+/vAADr/wT+hYWJiYmJe3t7BP/m6wAAAAAAAAAAAOv/////AOv/BI6ThYWJiYmJe3sE/+br
        AAAAAAAAAAAAAOvr6+vrAP8Ek46ThYWJiYmJewT/5usAAAAAAAAAAAAAAAAAAADr/wSOk46ThYWJiYmJ
        BP/m6wAAAAAAAAAAAAAAAAAAAOv/BJOOk46ThYWJiYkE/+brAAAAAAAAAAAAAAAAAAAA6/8EhZOOk46T
        hYWJiQT/5usAAAAAAAAAAAAAAAAAAADr/wSFhZOOk46ThYWJBP/m6wAAAAAAAAAAAAAAAAAAAOv/BIWF
        hZOOk47+hYUE/+brAAAAAAAAAAAAAAAAAAAA6/8EBAQEBAQEBAQEBAT/5usAAAAAAAAAAAAAAAAAAADr
        ///////////////////m6wAAAAAAAAAAAAAAAAAAAADt7e3t7e3t7e3t7e3t7e3tAAD//gf/wPgB/8Bw
        AP/AIAB/wAAAf8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAPAAAABwAAAAMAAAADAAAAAwAAAAMAA
        AACAAAABAAAAAfgAAAH8AAAB/gAAAf8AAAH/+AAB//gAAf/4AAH/+AAB//gAAf/4AAH/+AAB//wAAw==
</value>
  </data>
</root>