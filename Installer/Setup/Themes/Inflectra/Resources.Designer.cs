//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inflectra.SpiraTest.Installer.Themes.Inflectra {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Inflectra.SpiraTest.Installer.Themes.Inflectra.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ValidationMaster Installer.
        /// </summary>
        public static string App_Name {
            get {
                return ResourceManager.GetString("App_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please choose the folder that {0} will be installed into. If the folder already exists, all contents will be removed without backup..
        /// </summary>
        public static string ChooseLocation_Description {
            get {
                return ResourceManager.GetString("ChooseLocation_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please choose the folder to uninstall {0} from. All folder contents will be removed without backup..
        /// </summary>
        public static string ChooseLocation_Description_Uninstall {
            get {
                return ResourceManager.GetString("ChooseLocation_Description_Uninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please choose the folder of the existing {0} installation to upgrade..
        /// </summary>
        public static string ChooseLocation_Description_Upgrade {
            get {
                return ResourceManager.GetString("ChooseLocation_Description_Upgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder:.
        /// </summary>
        public static string ChooseLocation_Folder {
            get {
                return ResourceManager.GetString("ChooseLocation_Folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation Location.
        /// </summary>
        public static string ChooseLocation_Header {
            get {
                return ResourceManager.GetString("ChooseLocation_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The install folder already exists. Contents will be deleted before installation..
        /// </summary>
        public static string ChooseLocation_InstallationFolderAlreadyExists {
            get {
                return ResourceManager.GetString("ChooseLocation_InstallationFolderAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The chosen folder &apos;{0}&apos; cannot be upgraded or uninstalled because it does not exist!.
        /// </summary>
        public static string ChooseLocation_InstallationFolderDoesNotExist {
            get {
                return ResourceManager.GetString("ChooseLocation_InstallationFolderDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter the name of the folder you want to install {0} into!.
        /// </summary>
        public static string ChooseLocation_InstallationFolderNotEntered {
            get {
                return ResourceManager.GetString("ChooseLocation_InstallationFolderNotEntered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The chosen folder &apos;{0}&apos; cannot be upgraded or uninstalled because there is no &apos;{1}&apos; installation in that folder..
        /// </summary>
        public static string ChooseLocation_InstallationFolderNoWebConfig {
            get {
                return ResourceManager.GetString("ChooseLocation_InstallationFolderNoWebConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please choose the location where ValidationMaster will be installed:.
        /// </summary>
        public static string ChooseLocation_Intro {
            get {
                return ResourceManager.GetString("ChooseLocation_Intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation Location.
        /// </summary>
        public static string ChooseLocation_KeyText {
            get {
                return ResourceManager.GetString("ChooseLocation_KeyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path.
        /// </summary>
        public static string ChooseLocation_Path {
            get {
                return ResourceManager.GetString("ChooseLocation_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The details and tasks to be performed are summarized below. Click the &apos;{0}&apos; button to begin the process. If you need to make changes to any of the setting below, use the &apos;Back&apos; button..
        /// </summary>
        public static string Confirmation_Description {
            get {
                return ResourceManager.GetString("Confirmation_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Installation.
        /// </summary>
        public static string Confirmation_KeyText {
            get {
                return ResourceManager.GetString("Confirmation_KeyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click &apos;{0}&apos; to start the process....
        /// </summary>
        public static string Confirmation_StartInstallLegend {
            get {
                return ResourceManager.GetString("Confirmation_StartInstallLegend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING: The database will not be backed up.
        ///All data in it will be lost when the database is removed!.
        /// </summary>
        public static string Confirmation_UninstallNoDBBackup {
            get {
                return ResourceManager.GetString("Confirmation_UninstallNoDBBackup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING: The database will not be backed up.
        ///Data may be lost if the upgrade process fails!.
        /// </summary>
        public static string Confirmation_UpgradeNoDBBackup {
            get {
                return ResourceManager.GetString("Confirmation_UpgradeNoDBBackup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified backup file &apos;{0}&apos; already exists, please choose a different name and try again!.
        /// </summary>
        public static string DatabaseBackup_BackupFileAlreadyExists {
            get {
                return ResourceManager.GetString("DatabaseBackup_BackupFileAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please choose the location where {0} will be backed up to:.
        /// </summary>
        public static string DatabaseBackup_Description {
            get {
                return ResourceManager.GetString("DatabaseBackup_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup File:.
        /// </summary>
        public static string DatabaseBackup_File {
            get {
                return ResourceManager.GetString("DatabaseBackup_File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The filename of the backup in the above directory will be &apos;.
        /// </summary>
        public static string DatabaseBackup_Filename1 {
            get {
                return ResourceManager.GetString("DatabaseBackup_Filename1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}_&lt;timestamp&gt;.bak.
        /// </summary>
        public static string DatabaseBackup_Filename2 {
            get {
                return ResourceManager.GetString("DatabaseBackup_Filename2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;..
        /// </summary>
        public static string DatabaseBackup_Filename3 {
            get {
                return ResourceManager.GetString("DatabaseBackup_Filename3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The backup filename &apos;{0}&apos; needs to have a .bak file extension!.
        /// </summary>
        public static string DatabaseBackup_FilenameIncorrectExtension {
            get {
                return ResourceManager.GetString("DatabaseBackup_FilenameIncorrectExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to enter the name of a backup file for the {0} database!.
        /// </summary>
        public static string DatabaseBackup_FilenameNotEntered {
            get {
                return ResourceManager.GetString("DatabaseBackup_FilenameNotEntered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified backup directory &apos;{0}&apos; does not exist!.
        /// </summary>
        public static string DatabaseBackup_FolderPathDoesNotExist {
            get {
                return ResourceManager.GetString("DatabaseBackup_FolderPathDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup Settings.
        /// </summary>
        public static string DatabaseBackup_Header {
            get {
                return ResourceManager.GetString("DatabaseBackup_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set up the database backup options below..
        /// </summary>
        public static string DatabaseBackup_Intro1 {
            get {
                return ResourceManager.GetString("DatabaseBackup_Intro1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note.
        /// </summary>
        public static string DatabaseBackup_Intro2 {
            get {
                return ResourceManager.GetString("DatabaseBackup_Intro2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If entering a custom location, make sure that the path exists on the database server, and that the database process can write to the path. Uninstallation will continue even if backup creation fails..
        /// </summary>
        public static string DatabaseBackup_Intro3 {
            get {
                return ResourceManager.GetString("DatabaseBackup_Intro3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database Backup Location.
        /// </summary>
        public static string DatabaseBackup_KeyText {
            get {
                return ResourceManager.GetString("DatabaseBackup_KeyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database Settings.
        /// </summary>
        public static string DatabaseServer_AdvancedSettings {
            get {
                return ResourceManager.GetString("DatabaseServer_AdvancedSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot create a new login named &apos;{0}&apos; as it will conflict with the login you specified to perform the installation with..
        /// </summary>
        public static string DatabaseServer_CannotUseNewLoginConflicts {
            get {
                return ResourceManager.GetString("DatabaseServer_CannotUseNewLoginConflicts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test Connection.
        /// </summary>
        public static string DatabaseServer_Connect {
            get {
                return ResourceManager.GetString("DatabaseServer_Connect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to connect to database server, error was &apos;{0}&apos;.
        /// </summary>
        public static string DatabaseServer_ConnectFailure {
            get {
                return ResourceManager.GetString("DatabaseServer_ConnectFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to login with the provided username and password.\nPlease check the login and password and try again\r\n (Error Message: &apos;{0}&apos;).
        /// </summary>
        public static string DatabaseServer_ConnectFailureLoginPassword {
            get {
                return ResourceManager.GetString("DatabaseServer_ConnectFailureLoginPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to connect to the database server.\n\nPlease make sure that the database server name is correct and that you have included the instance name if needed. (e.g. SQL Server express edition has a server name of MachineName\SQLEXPRESS)\n\n(Error Message: &apos;{0}&apos;).
        /// </summary>
        public static string DatabaseServer_ConnectFailureServerInstanceNotFound {
            get {
                return ResourceManager.GetString("DatabaseServer_ConnectFailureServerInstanceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully connected to database server.
        /// </summary>
        public static string DatabaseServer_ConnectSuccess {
            get {
                return ResourceManager.GetString("DatabaseServer_ConnectSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are using Windows Authentication to connect to a remote database server, you will need to change the Application Pool identity to a Windows Domain User after installation..
        /// </summary>
        public static string DatabaseServer_ConnectSuccessWithAppPoolWarning {
            get {
                return ResourceManager.GetString("DatabaseServer_ConnectSuccessWithAppPoolWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection Information.
        /// </summary>
        public static string DatabaseServer_DatabaseInfo {
            get {
                return ResourceManager.GetString("DatabaseServer_DatabaseInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database Name:.
        /// </summary>
        public static string DatabaseServer_DatabaseName {
            get {
                return ResourceManager.GetString("DatabaseServer_DatabaseName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create the database &apos;{0}&apos; as a database by this name already exists. Please enter a different name and try again!.
        /// </summary>
        public static string DatabaseServer_DatabaseNameAlreadyExists {
            get {
                return ResourceManager.GetString("DatabaseServer_DatabaseNameAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An application&apos;s database already exists. If you are trying to upgrade, go back to the Install Type screen and select an upgrade option. Otherwise, remove the database &apos;{0}&apos; and try again..
        /// </summary>
        public static string DatabaseServer_DatabaseNameAlreadyExists_Simple {
            get {
                return ResourceManager.GetString("DatabaseServer_DatabaseNameAlreadyExists_Simple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot upgrade, connect to, or uninstall the database &apos;{0}&apos; as no database exists by this name. Please double-check the server and login/password then try again!.
        /// </summary>
        public static string DatabaseServer_DatabaseNameDoesNotExist {
            get {
                return ResourceManager.GetString("DatabaseServer_DatabaseNameDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database User:.
        /// </summary>
        public static string DatabaseServer_DatabaseUser {
            get {
                return ResourceManager.GetString("DatabaseServer_DatabaseUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer will now help you connect to the SQL Server database that ValidationMaster is to be installed on..
        /// </summary>
        public static string DatabaseServer_Intro {
            get {
                return ResourceManager.GetString("DatabaseServer_Intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter the name of the database server and the login/password for a system-administration level account that will be used to create the database and associated database objects:.
        /// </summary>
        public static string DatabaseServer_Introduction {
            get {
                return ResourceManager.GetString("DatabaseServer_Introduction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot upgrade the &apos;{0}&apos; database, it is not running a supported version of &apos;{1}&apos;..
        /// </summary>
        public static string DatabaseServer_InvalidVersionofDatabaseSchema {
            get {
                return ResourceManager.GetString("DatabaseServer_InvalidVersionofDatabaseSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database Connection.
        /// </summary>
        public static string DatabaseServer_KeyText {
            get {
                return ResourceManager.GetString("DatabaseServer_KeyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login:.
        /// </summary>
        public static string DatabaseServer_Login {
            get {
                return ResourceManager.GetString("DatabaseServer_Login", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The database login you have chosen is not a system administrator of the database. It will not be able to create the necessary database objects. Please try again using a &apos;sysadmin&apos; level account..
        /// </summary>
        public static string DatabaseServer_LoginNotSysAdmin {
            get {
                return ResourceManager.GetString("DatabaseServer_LoginNotSysAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SQL Server Login:.
        /// </summary>
        public static string DatabaseServer_NewLogin {
            get {
                return ResourceManager.GetString("DatabaseServer_NewLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password:.
        /// </summary>
        public static string DatabaseServer_Password {
            get {
                return ResourceManager.GetString("DatabaseServer_Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot use database passwords that contain semicolons.
        /// </summary>
        public static string DatabaseServer_PasswordNoSemiColons {
            get {
                return ResourceManager.GetString("DatabaseServer_PasswordNoSemiColons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Sample Data.
        /// </summary>
        public static string DatabaseServer_SampleData {
            get {
                return ResourceManager.GetString("DatabaseServer_SampleData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server\Instance:.
        /// </summary>
        public static string DatabaseServer_Server {
            get {
                return ResourceManager.GetString("DatabaseServer_Server", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The database server name cannot end in a backslash.
        /// </summary>
        public static string DatabaseServer_ServerNoTrailingSlash {
            get {
                return ResourceManager.GetString("DatabaseServer_ServerNoTrailingSlash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to provide a SQL Server instance!.
        /// </summary>
        public static string DatabaseServer_ServerRequired {
            get {
                return ResourceManager.GetString("DatabaseServer_ServerRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SQL Server Authentication.
        /// </summary>
        public static string DatabaseServer_SQLAuth {
            get {
                return ResourceManager.GetString("DatabaseServer_SQLAuth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to provide a SQL Server login!.
        /// </summary>
        public static string DatabaseServer_SQLLoginRequired {
            get {
                return ResourceManager.GetString("DatabaseServer_SQLLoginRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to detect database user&apos;s role. You can proceed with installation, but it may fail..
        /// </summary>
        public static string DatabaseServer_UnableToDetectDatabaseRole {
            get {
                return ResourceManager.GetString("DatabaseServer_UnableToDetectDatabaseRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to detect database version. You can proceed with installation, but it may fail..
        /// </summary>
        public static string DatabaseServer_UnableToDetectDatabaseVersion {
            get {
                return ResourceManager.GetString("DatabaseServer_UnableToDetectDatabaseVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your database server is running an incompatible version of MS SQL Server. This application needs &apos;{0}&apos; or greater to be installed..
        /// </summary>
        public static string DatabaseServer_VersionTooOld {
            get {
                return ResourceManager.GetString("DatabaseServer_VersionTooOld", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Authentication.
        /// </summary>
        public static string DatabaseServer_WindowsAuth {
            get {
                return ResourceManager.GetString("DatabaseServer_WindowsAuth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I accept the terms of the End User License Agreement.
        /// </summary>
        public static string Eula_AcceptEula {
            get {
                return ResourceManager.GetString("Eula_AcceptEula", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to accept the End User License Agreement (EULA) to Proceed!.
        /// </summary>
        public static string Eula_AcceptToContinue {
            get {
                return ResourceManager.GetString("Eula_AcceptToContinue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please read the following OnShore Technology Group, Inc. End User License Agreement (EULA) carefully:.
        /// </summary>
        public static string Eula_Intro {
            get {
                return ResourceManager.GetString("Eula_Intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Agreement.
        /// </summary>
        public static string Eula_KeyText {
            get {
                return ResourceManager.GetString("Eula_KeyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Advanced Options.
        /// </summary>
        public static string Global_AdvancedOptions {
            get {
                return ResourceManager.GetString("Global_AdvancedOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click &apos;Next&apos; to continue....
        /// </summary>
        public static string Global_ClickNext {
            get {
                return ResourceManager.GetString("Global_ClickNext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ValidationMaster.
        /// </summary>
        public static string Global_DefaultProduct {
            get {
                return ResourceManager.GetString("Global_DefaultProduct", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failure.
        /// </summary>
        public static string Global_Failure {
            get {
                return ResourceManager.GetString("Global_Failure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finish.
        /// </summary>
        public static string Global_Finish {
            get {
                return ResourceManager.GetString("Global_Finish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://validationmaster.atlassian.net/servicedesk/customer/portal/2/group/-1.
        /// </summary>
        public static string Global_HelpLink {
            get {
                return ResourceManager.GetString("Global_HelpLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1.312.321.6400.
        /// </summary>
        public static string Global_HelpTelephone {
            get {
                return ResourceManager.GetString("Global_HelpTelephone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        public static string Global_Install {
            get {
                return ResourceManager.GetString("Global_Install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation.
        /// </summary>
        public static string Global_Installation {
            get {
                return ResourceManager.GetString("Global_Installation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For additional information, the log can be found in C:\ProgramData\OnShore\ValidationMaster.
        /// </summary>
        public static string Global_LogLocation {
            get {
                return ResourceManager.GetString("Global_LogLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OnShore Technology Group, Inc..
        /// </summary>
        public static string Global_ManufacturerLegalName {
            get {
                return ResourceManager.GetString("Global_ManufacturerLegalName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OnShore Technology Group, Inc..
        /// </summary>
        public static string Global_ManufacturerName {
            get {
                return ResourceManager.GetString("Global_ManufacturerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://www.onshoretech.com.
        /// </summary>
        public static string Global_ManufacturerWebsite {
            get {
                return ResourceManager.GetString("Global_ManufacturerWebsite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://validationmaster.atlassian.net/servicedesk/customer/portal/2/group/-1.
        /// </summary>
        public static string Global_OnlineDocumentationUrl {
            get {
                return ResourceManager.GetString("Global_OnlineDocumentationUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success.
        /// </summary>
        public static string Global_Success {
            get {
                return ResourceManager.GetString("Global_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a complete Quality Assurance and Project Management suite..
        /// </summary>
        public static string Global_Tagline {
            get {
                return ResourceManager.GetString("Global_Tagline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ValidationMasterTheme.
        /// </summary>
        public static string Global_ThemeName {
            get {
                return ResourceManager.GetString("Global_ThemeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall.
        /// </summary>
        public static string Global_Uninstall {
            get {
                return ResourceManager.GetString("Global_Uninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrade.
        /// </summary>
        public static string Global_Upgrade {
            get {
                return ResourceManager.GetString("Global_Upgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please Fix Errors to Proceed.
        /// </summary>
        public static string Global_ValidationError {
            get {
                return ResourceManager.GetString("Global_ValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrade.
        /// </summary>
        public static string Install_Type_Upgrade {
            get {
                return ResourceManager.GetString("Install_Type_Upgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a ValidationMaster Application Server to a Clustered Instance.
        /// </summary>
        public static string InstallationType_AddApplicationNode {
            get {
                return ResourceManager.GetString("InstallationType_AddApplicationNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installs a new version of ValidationMaster on this computer.
        /// </summary>
        public static string InstallationType_CleanInstall {
            get {
                return ResourceManager.GetString("InstallationType_CleanInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation Options.
        /// </summary>
        public static string InstallationType_InstallationOptions {
            get {
                return ResourceManager.GetString("InstallationType_InstallationOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please choose the setup that best suits your needs:.
        /// </summary>
        public static string InstallationType_Intro {
            get {
                return ResourceManager.GetString("InstallationType_Intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation Type.
        /// </summary>
        public static string InstallationType_KeyText {
            get {
                return ResourceManager.GetString("InstallationType_KeyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maintenance Options.
        /// </summary>
        public static string InstallationType_MaintenanceOptions {
            get {
                return ResourceManager.GetString("InstallationType_MaintenanceOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please choose an installation option to continue!.
        /// </summary>
        public static string InstallationType_NoOptionChosen {
            get {
                return ResourceManager.GetString("InstallationType_NoOptionChosen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall Application From this Server.
        /// </summary>
        public static string InstallationType_Uninstall {
            get {
                return ResourceManager.GetString("InstallationType_Uninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrades an older version of ValidationMaster already installed.
        /// </summary>
        public static string InstallationType_Upgrade {
            get {
                return ResourceManager.GetString("InstallationType_Upgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrade a Standalone ValidationMaster Database.
        /// </summary>
        public static string InstallationType_UpgradeDatabaseOnly {
            get {
                return ResourceManager.GetString("InstallationType_UpgradeDatabaseOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not update application settings with new setting. Log in to the application and verify Global Settings are correct..
        /// </summary>
        public static string InstallResult_Message_ErrorAppSettings {
            get {
                return ResourceManager.GetString("InstallResult_Message_ErrorAppSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error trying to back up the database. The {1} could not continue. Check hard drive space, and user permissions, then try the {1} again..
        /// </summary>
        public static string InstallResult_Message_ErrorBkpDatabase {
            get {
                return ResourceManager.GetString("InstallResult_Message_ErrorBkpDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not create the database or database objects..
        /// </summary>
        public static string InstallResult_Message_ErrorInsDatabase {
            get {
                return ResourceManager.GetString("InstallResult_Message_ErrorInsDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not copy files into installation directory..
        /// </summary>
        public static string InstallResult_Message_ErrorInsFiles {
            get {
                return ResourceManager.GetString("InstallResult_Message_ErrorInsFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application could not be installed. {0}
        ///Try installation again. If you continue to have issues, contact support..
        /// </summary>
        public static string InstallResult_Message_ErrorInsRollback {
            get {
                return ResourceManager.GetString("InstallResult_Message_ErrorInsRollback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not create application settings..
        /// </summary>
        public static string InstallResult_Message_ErrorInsSettings {
            get {
                return ResourceManager.GetString("InstallResult_Message_ErrorInsSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not create the IIS Server Web Objects..
        /// </summary>
        public static string InstallResult_Message_ErrorInsWebObj {
            get {
                return ResourceManager.GetString("InstallResult_Message_ErrorInsWebObj", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {1} Incomplete.
        /// </summary>
        public static string InstallResult_Message_ErrorTitle {
            get {
                return ResourceManager.GetString("InstallResult_Message_ErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not properly copy the new application files into the install directory. Make sure there are no open files in the directory and that disk space is not limited, then run upgrade again..
        /// </summary>
        public static string InstallResult_Message_ErrorUpgApplFiles {
            get {
                return ResourceManager.GetString("InstallResult_Message_ErrorUpgApplFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error upgrading the database. Restore the backup that was created, and try the upgrade again..
        /// </summary>
        public static string InstallResult_Message_ErrorUpgDatabase {
            get {
                return ResourceManager.GetString("InstallResult_Message_ErrorUpgDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not update the application&apos;s configration. Please inform support if you cannot connect to the application..
        /// </summary>
        public static string InstallResult_Message_ErrorWebConfig {
            get {
                return ResourceManager.GetString("InstallResult_Message_ErrorWebConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {1} Successful.
        /// </summary>
        public static string InstallResult_Message_SuccessTitle {
            get {
                return ResourceManager.GetString("InstallResult_Message_SuccessTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup Database To File.
        /// </summary>
        public static string InstallTasks_Action_BackupDatabase {
            get {
                return ResourceManager.GetString("InstallTasks_Action_BackupDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Add/Remove Programs Link.
        /// </summary>
        public static string InstallTasks_Action_CreateControlPanel {
            get {
                return ResourceManager.GetString("InstallTasks_Action_CreateControlPanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Event Log.
        /// </summary>
        public static string InstallTasks_Action_CreateEventLog {
            get {
                return ResourceManager.GetString("InstallTasks_Action_CreateEventLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Start Menu Shortcuts.
        /// </summary>
        public static string InstallTasks_Action_CreateStartMenu {
            get {
                return ResourceManager.GetString("InstallTasks_Action_CreateStartMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Web Server Links.
        /// </summary>
        public static string InstallTasks_Action_CreateWebServer {
            get {
                return ResourceManager.GetString("InstallTasks_Action_CreateWebServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete Database.
        /// </summary>
        public static string InstallTasks_Action_DeleteDatabase {
            get {
                return ResourceManager.GetString("InstallTasks_Action_DeleteDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy Application Files.
        /// </summary>
        public static string InstallTasks_Action_InstallApp {
            get {
                return ResourceManager.GetString("InstallTasks_Action_InstallApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Database.
        /// </summary>
        public static string InstallTasks_Action_InstallDatabaase {
            get {
                return ResourceManager.GetString("InstallTasks_Action_InstallDatabaase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install DataSync Service.
        /// </summary>
        public static string InstallTasks_Action_InstallSync {
            get {
                return ResourceManager.GetString("InstallTasks_Action_InstallSync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Application Files.
        /// </summary>
        public static string InstallTasks_Action_RemoveApp {
            get {
                return ResourceManager.GetString("InstallTasks_Action_RemoveApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Start Menu Shortcuts.
        /// </summary>
        public static string InstallTasks_Action_RemoveStartMenu {
            get {
                return ResourceManager.GetString("InstallTasks_Action_RemoveStartMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove DataSync Service.
        /// </summary>
        public static string InstallTasks_Action_RemoveSync {
            get {
                return ResourceManager.GetString("InstallTasks_Action_RemoveSync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Web Server Links.
        /// </summary>
        public static string InstallTasks_Action_RemoveWebServer {
            get {
                return ResourceManager.GetString("InstallTasks_Action_RemoveWebServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Configuration Files.
        /// </summary>
        public static string InstallTasks_Action_UpdateConfig {
            get {
                return ResourceManager.GetString("InstallTasks_Action_UpdateConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Application Settings.
        /// </summary>
        public static string InstallTasks_Action_UpdateSettings {
            get {
                return ResourceManager.GetString("InstallTasks_Action_UpdateSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrade Database Schema.
        /// </summary>
        public static string InstallTasks_Action_UpgradeDatabase {
            get {
                return ResourceManager.GetString("InstallTasks_Action_UpgradeDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation Tasks:.
        /// </summary>
        public static string InstallTasks_HeaderInstall {
            get {
                return ResourceManager.GetString("InstallTasks_HeaderInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstallation Tasks:.
        /// </summary>
        public static string InstallTasks_HeaderUninstall {
            get {
                return ResourceManager.GetString("InstallTasks_HeaderUninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrade Tasks:.
        /// </summary>
        public static string InstallTasks_HeaderUpgrade {
            get {
                return ResourceManager.GetString("InstallTasks_HeaderUpgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome to the ValidationMaster installation wizard. This wizard will walk you through the steps to install ValidationMaster on your server. The installer can also upgrade an existing installation of ValidationMaster or add an additional ValidationMaster application node to a clustered installation..
        /// </summary>
        public static string Introduction_Legend {
            get {
                return ResourceManager.GetString("Introduction_Legend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expiration:.
        /// </summary>
        public static string LicenseKey_Expiration {
            get {
                return ResourceManager.GetString("LicenseKey_Expiration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Information:.
        /// </summary>
        public static string LicenseKey_Information {
            get {
                return ResourceManager.GetString("LicenseKey_Information", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter the organization and license key exactly as listed in your OnShore Technology Group, Inc. customer area..
        /// </summary>
        public static string LicenseKey_Intro {
            get {
                return ResourceManager.GetString("LicenseKey_Intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Key.
        /// </summary>
        public static string LicenseKey_KeyText {
            get {
                return ResourceManager.GetString("LicenseKey_KeyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Entry:.
        /// </summary>
        public static string LicenseKey_LicenseEntry {
            get {
                return ResourceManager.GetString("LicenseKey_LicenseEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided license key has expired. Please contact OnShore Technology Group, Inc. Sales as soon as possible to get a new license key..
        /// </summary>
        public static string LicenseKey_LicenseIsExpired {
            get {
                return ResourceManager.GetString("LicenseKey_LicenseIsExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Key Expired.
        /// </summary>
        public static string LicenseKey_LicenseIsExpiredCaption {
            get {
                return ResourceManager.GetString("LicenseKey_LicenseIsExpiredCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided license key is invalid. Please make sure you have entered the Organization Name and License Key exactly as they appear in the OnShore Technology Group, Inc. Customer Area.
        /// </summary>
        public static string LicenseKey_LicenseIsInvalid {
            get {
                return ResourceManager.GetString("LicenseKey_LicenseIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Key Invalid.
        /// </summary>
        public static string LicenseKey_LicenseIsInvalidCaption {
            get {
                return ResourceManager.GetString("LicenseKey_LicenseIsInvalidCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Key:.
        /// </summary>
        public static string LicenseKey_LicenseKey {
            get {
                return ResourceManager.GetString("LicenseKey_LicenseKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Organization:.
        /// </summary>
        public static string LicenseKey_Organization {
            get {
                return ResourceManager.GetString("LicenseKey_Organization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Perpetual.
        /// </summary>
        public static string LicenseKey_Perpetual {
            get {
                return ResourceManager.GetString("LicenseKey_Perpetual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product:.
        /// </summary>
        public static string LicenseKey_Product {
            get {
                return ResourceManager.GetString("LicenseKey_Product", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type:.
        /// </summary>
        public static string LicenseKey_Type {
            get {
                return ResourceManager.GetString("LicenseKey_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validate License.
        /// </summary>
        public static string LicenseKey_Validate {
            get {
                return ResourceManager.GetString("LicenseKey_Validate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking to make sure the prerequisites are installed. Please refer to the installation guide for further details..
        /// </summary>
        public static string Prerequisites_Intro {
            get {
                return ResourceManager.GetString("Prerequisites_Intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verify Prerequisites.
        /// </summary>
        public static string Prerequisites_KeyText {
            get {
                return ResourceManager.GetString("Prerequisites_KeyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This wizard will install ValidationMaster from OnShore Technology Group, Inc. onto your server..
        /// </summary>
        public static string Procedure_Description {
            get {
                return ResourceManager.GetString("Procedure_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ValidationMaster {0} Installation Wizard.
        /// </summary>
        public static string Procedure_Title {
            get {
                return ResourceManager.GetString("Procedure_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database is already version {0}. It cannot be upgraded to a higher version..
        /// </summary>
        public static string Progress_DBUpgrade_WrongVersionMaximum {
            get {
                return ResourceManager.GetString("Progress_DBUpgrade_WrongVersionMaximum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database is currently version {0}. It must be at least {1} to upgrade to {2}..
        /// </summary>
        public static string Progress_DBUpgrade_WrongVersionMinimum {
            get {
                return ResourceManager.GetString("Progress_DBUpgrade_WrongVersionMinimum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation Progress.
        /// </summary>
        public static string Progress_KeyText {
            get {
                return ResourceManager.GetString("Progress_KeyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation Complete.
        /// </summary>
        public static string Results_KeyText {
            get {
                return ResourceManager.GetString("Results_KeyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation of {0} was completed successfully. You can start the application by opening the {0} program entry on the Start Menu..
        /// </summary>
        public static string Results_Message {
            get {
                return ResourceManager.GetString("Results_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Installation Successful.
        /// </summary>
        public static string Results_Status {
            get {
                return ResourceManager.GetString("Results_Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation of {0} completed..
        /// </summary>
        public static string Thread_Completed {
            get {
                return ResourceManager.GetString("Thread_Completed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstallation of {0} completed..
        /// </summary>
        public static string Thread_Completed_Uninstall {
            get {
                return ResourceManager.GetString("Thread_Completed_Uninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully completed the uninstallation of {0} on this computer..
        /// </summary>
        public static string Thread_Completed_UninstallMessage {
            get {
                return ResourceManager.GetString("Thread_Completed_UninstallMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully completed the installation of {0} on this computer..
        /// </summary>
        public static string Thread_CompletedMessage {
            get {
                return ResourceManager.GetString("Thread_CompletedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ValidationMaster Installer: Worker Thread.
        /// </summary>
        public static string Thread_Name {
            get {
                return ResourceManager.GetString("Thread_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application installed is a newer version than this installer. You cannot downgrade the current installation..
        /// </summary>
        public static string Upgrade_NewerVersion {
            get {
                return ResourceManager.GetString("Upgrade_NewerVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The applicaiton is already at version v{0} - there is no need to upgrade. Are you sure you want to continue?.
        /// </summary>
        public static string Upgrade_SameVersion {
            get {
                return ResourceManager.GetString("Upgrade_SameVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version installed is older than v5.4. It must be upgraded to the latest v5.4 version before you can upgrade to v6.x..
        /// </summary>
        public static string Upgrade_WrongVersion {
            get {
                return ResourceManager.GetString("Upgrade_WrongVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application name selected for {0} is already in use, please use another name and try again!.
        /// </summary>
        public static string WebServer_ApplicationNameAlreadyInUse {
            get {
                return ResourceManager.GetString("WebServer_ApplicationNameAlreadyInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please choose the IIS virtual directory that you want to be uninstalled:.
        /// </summary>
        public static string WebServer_ExistingVirtualDirectoryIntro1 {
            get {
                return ResourceManager.GetString("WebServer_ExistingVirtualDirectoryIntro1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please choose the IIS virtual directory that you want to be upgraded:.
        /// </summary>
        public static string WebServer_ExistingVirtualDirectoryIntro2 {
            get {
                return ResourceManager.GetString("WebServer_ExistingVirtualDirectoryIntro2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer will now let you choose how the product is installed on your IIS web server:.
        /// </summary>
        public static string WebServer_Intro {
            get {
                return ResourceManager.GetString("WebServer_Intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Web Server Configuration.
        /// </summary>
        public static string WebServer_KeyText {
            get {
                return ResourceManager.GetString("WebServer_KeyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter the name of the application pool you want to create for {0}.
        /// </summary>
        public static string WebServer_NeedToProvideApplicationPoolName {
            get {
                return ResourceManager.GetString("WebServer_NeedToProvideApplicationPoolName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Pool.
        /// </summary>
        public static string WebServer_NewApplicationPool {
            get {
                return ResourceManager.GetString("WebServer_NewApplicationPool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter the name of the IIS virtual directory that you want to use with ValidationMaster. Leaving it will blank will install ValidationMaster directly under the Website itself:.
        /// </summary>
        public static string WebServer_NewVirtualDirectoryIntro {
            get {
                return ResourceManager.GetString("WebServer_NewVirtualDirectoryIntro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Virtual Directory:.
        /// </summary>
        public static string WebServer_VirtualDirectory {
            get {
                return ResourceManager.GetString("WebServer_VirtualDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Web Site:.
        /// </summary>
        public static string WebServer_WebSite {
            get {
                return ResourceManager.GetString("WebServer_WebSite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please choose the IIS website that you want to install ValidationMaster onto:.
        /// </summary>
        public static string WebServer_WebSiteIntro {
            get {
                return ResourceManager.GetString("WebServer_WebSiteIntro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Web Site Root).
        /// </summary>
        public static string WebServer_WebsiteRoot {
            get {
                return ResourceManager.GetString("WebServer_WebsiteRoot", resourceCulture);
            }
        }
    }
}
