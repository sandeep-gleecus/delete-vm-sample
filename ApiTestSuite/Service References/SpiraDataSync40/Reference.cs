//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inflectra.SpiraTest.ApiTestSuite.SpiraDataSync40 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v4_0")]
    [System.SerializableAttribute()]
    public partial struct ServiceFaultMessage : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteDataSyncSystem", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v4_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteDataSyncSystem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoMapUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConnectionStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Custom01Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Custom02Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Custom03Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Custom04Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Custom05Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DataSyncStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataSyncStatusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DataSyncSystemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastSyncDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeOffsetHoursField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoMapUsers {
            get {
                return this.AutoMapUsersField;
            }
            set {
                if ((this.AutoMapUsersField.Equals(value) != true)) {
                    this.AutoMapUsersField = value;
                    this.RaisePropertyChanged("AutoMapUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConnectionString {
            get {
                return this.ConnectionStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionStringField, value) != true)) {
                    this.ConnectionStringField = value;
                    this.RaisePropertyChanged("ConnectionString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Custom01 {
            get {
                return this.Custom01Field;
            }
            set {
                if ((object.ReferenceEquals(this.Custom01Field, value) != true)) {
                    this.Custom01Field = value;
                    this.RaisePropertyChanged("Custom01");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Custom02 {
            get {
                return this.Custom02Field;
            }
            set {
                if ((object.ReferenceEquals(this.Custom02Field, value) != true)) {
                    this.Custom02Field = value;
                    this.RaisePropertyChanged("Custom02");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Custom03 {
            get {
                return this.Custom03Field;
            }
            set {
                if ((object.ReferenceEquals(this.Custom03Field, value) != true)) {
                    this.Custom03Field = value;
                    this.RaisePropertyChanged("Custom03");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Custom04 {
            get {
                return this.Custom04Field;
            }
            set {
                if ((object.ReferenceEquals(this.Custom04Field, value) != true)) {
                    this.Custom04Field = value;
                    this.RaisePropertyChanged("Custom04");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Custom05 {
            get {
                return this.Custom05Field;
            }
            set {
                if ((object.ReferenceEquals(this.Custom05Field, value) != true)) {
                    this.Custom05Field = value;
                    this.RaisePropertyChanged("Custom05");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DataSyncStatusId {
            get {
                return this.DataSyncStatusIdField;
            }
            set {
                if ((this.DataSyncStatusIdField.Equals(value) != true)) {
                    this.DataSyncStatusIdField = value;
                    this.RaisePropertyChanged("DataSyncStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataSyncStatusName {
            get {
                return this.DataSyncStatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DataSyncStatusNameField, value) != true)) {
                    this.DataSyncStatusNameField = value;
                    this.RaisePropertyChanged("DataSyncStatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DataSyncSystemId {
            get {
                return this.DataSyncSystemIdField;
            }
            set {
                if ((this.DataSyncSystemIdField.Equals(value) != true)) {
                    this.DataSyncSystemIdField = value;
                    this.RaisePropertyChanged("DataSyncSystemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastSyncDate {
            get {
                return this.LastSyncDateField;
            }
            set {
                if ((this.LastSyncDateField.Equals(value) != true)) {
                    this.LastSyncDateField = value;
                    this.RaisePropertyChanged("LastSyncDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeOffsetHours {
            get {
                return this.TimeOffsetHoursField;
            }
            set {
                if ((this.TimeOffsetHoursField.Equals(value) != true)) {
                    this.TimeOffsetHoursField = value;
                    this.RaisePropertyChanged("TimeOffsetHours");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v4.0/", ConfigurationName="SpiraDataSync40.IDataSync")]
    public interface IDataSync {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/Connection_Authenticate" +
            "", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/Connection_Authenticate" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.SpiraTest.ApiTestSuite.SpiraDataSync40.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/Connection_Authenticate" +
            "ServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v4_0")]
        bool Connection_Authenticate(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/Connection_Authenticate" +
            "", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/Connection_Authenticate" +
            "Response")]
        System.Threading.Tasks.Task<bool> Connection_AuthenticateAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/Connection_Authenticate" +
            "2", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/Connection_Authenticate" +
            "2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.SpiraTest.ApiTestSuite.SpiraDataSync40.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/Connection_Authenticate" +
            "2ServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v4_0")]
        bool Connection_Authenticate2(string userName, string password, string plugInName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/Connection_Authenticate" +
            "2", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/Connection_Authenticate" +
            "2Response")]
        System.Threading.Tasks.Task<bool> Connection_Authenticate2Async(string userName, string password, string plugInName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/Connection_ConnectToPro" +
            "ject", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/Connection_ConnectToPro" +
            "jectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.SpiraTest.ApiTestSuite.SpiraDataSync40.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/Connection_ConnectToPro" +
            "jectServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v4_0")]
        bool Connection_ConnectToProject(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/Connection_ConnectToPro" +
            "ject", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/Connection_ConnectToPro" +
            "jectResponse")]
        System.Threading.Tasks.Task<bool> Connection_ConnectToProjectAsync(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/Connection_Disconnect", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/Connection_DisconnectRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.SpiraTest.ApiTestSuite.SpiraDataSync40.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/Connection_DisconnectSe" +
            "rviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v4_0")]
        void Connection_Disconnect();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/Connection_Disconnect", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/Connection_DisconnectRe" +
            "sponse")]
        System.Threading.Tasks.Task Connection_DisconnectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/System_GetProductName", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/System_GetProductNameRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.SpiraTest.ApiTestSuite.SpiraDataSync40.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/System_GetProductNameSe" +
            "rviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v4_0")]
        string System_GetProductName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/System_GetProductName", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/System_GetProductNameRe" +
            "sponse")]
        System.Threading.Tasks.Task<string> System_GetProductNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/System_GetServerDateTim" +
            "e", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/System_GetServerDateTim" +
            "eResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.SpiraTest.ApiTestSuite.SpiraDataSync40.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/System_GetServerDateTim" +
            "eServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v4_0")]
        System.DateTime System_GetServerDateTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/System_GetServerDateTim" +
            "e", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/System_GetServerDateTim" +
            "eResponse")]
        System.Threading.Tasks.Task<System.DateTime> System_GetServerDateTimeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/System_GetWebServerUrl", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/System_GetWebServerUrlR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.SpiraTest.ApiTestSuite.SpiraDataSync40.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/System_GetWebServerUrlS" +
            "erviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v4_0")]
        string System_GetWebServerUrl();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/System_GetWebServerUrl", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v4.0/IService/System_GetWebServerUrlR" +
            "esponse")]
        System.Threading.Tasks.Task<string> System_GetWebServerUrlAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IDataSync/DataSyncSystem_Retriev" +
            "e", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v4.0/IDataSync/DataSyncSystem_Retriev" +
            "eResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.SpiraTest.ApiTestSuite.SpiraDataSync40.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IDataSync/DataSyncSystem_Retriev" +
            "eServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v4_0")]
        Inflectra.SpiraTest.ApiTestSuite.SpiraDataSync40.RemoteDataSyncSystem[] DataSyncSystem_Retrieve();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IDataSync/DataSyncSystem_Retriev" +
            "e", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v4.0/IDataSync/DataSyncSystem_Retriev" +
            "eResponse")]
        System.Threading.Tasks.Task<Inflectra.SpiraTest.ApiTestSuite.SpiraDataSync40.RemoteDataSyncSystem[]> DataSyncSystem_RetrieveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IDataSync/DataSyncSystem_SaveRun" +
            "Failure", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v4.0/IDataSync/DataSyncSystem_SaveRun" +
            "FailureResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.SpiraTest.ApiTestSuite.SpiraDataSync40.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IDataSync/DataSyncSystem_SaveRun" +
            "FailureServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v4_0")]
        void DataSyncSystem_SaveRunFailure(int dataSyncSystemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IDataSync/DataSyncSystem_SaveRun" +
            "Failure", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v4.0/IDataSync/DataSyncSystem_SaveRun" +
            "FailureResponse")]
        System.Threading.Tasks.Task DataSyncSystem_SaveRunFailureAsync(int dataSyncSystemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IDataSync/DataSyncSystem_SaveRun" +
            "Success", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v4.0/IDataSync/DataSyncSystem_SaveRun" +
            "SuccessResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.SpiraTest.ApiTestSuite.SpiraDataSync40.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IDataSync/DataSyncSystem_SaveRun" +
            "SuccessServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v4_0")]
        void DataSyncSystem_SaveRunSuccess(int dataSyncSystemId, System.DateTime lastRunDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IDataSync/DataSyncSystem_SaveRun" +
            "Success", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v4.0/IDataSync/DataSyncSystem_SaveRun" +
            "SuccessResponse")]
        System.Threading.Tasks.Task DataSyncSystem_SaveRunSuccessAsync(int dataSyncSystemId, System.DateTime lastRunDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IDataSync/DataSyncSystem_SaveRun" +
            "Warning", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v4.0/IDataSync/DataSyncSystem_SaveRun" +
            "WarningResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.SpiraTest.ApiTestSuite.SpiraDataSync40.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IDataSync/DataSyncSystem_SaveRun" +
            "WarningServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v4_0")]
        void DataSyncSystem_SaveRunWarning(int dataSyncSystemId, System.DateTime lastRunDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IDataSync/DataSyncSystem_SaveRun" +
            "Warning", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v4.0/IDataSync/DataSyncSystem_SaveRun" +
            "WarningResponse")]
        System.Threading.Tasks.Task DataSyncSystem_SaveRunWarningAsync(int dataSyncSystemId, System.DateTime lastRunDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IDataSync/DataSyncSystem_WriteEv" +
            "ent", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v4.0/IDataSync/DataSyncSystem_WriteEv" +
            "entResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.SpiraTest.ApiTestSuite.SpiraDataSync40.ServiceFaultMessage), Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IDataSync/DataSyncSystem_WriteEv" +
            "entServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.SpiraTest.Web.Services.v4_0")]
        void DataSyncSystem_WriteEvent(string message, string details, int eventLogEntryType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/SpiraTest/Services/v4.0/IDataSync/DataSyncSystem_WriteEv" +
            "ent", ReplyAction="http://www.inflectra.com/SpiraTest/Services/v4.0/IDataSync/DataSyncSystem_WriteEv" +
            "entResponse")]
        System.Threading.Tasks.Task DataSyncSystem_WriteEventAsync(string message, string details, int eventLogEntryType);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataSyncChannel : Inflectra.SpiraTest.ApiTestSuite.SpiraDataSync40.IDataSync, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataSyncClient : System.ServiceModel.ClientBase<Inflectra.SpiraTest.ApiTestSuite.SpiraDataSync40.IDataSync>, Inflectra.SpiraTest.ApiTestSuite.SpiraDataSync40.IDataSync {
        
        public DataSyncClient() {
        }
        
        public DataSyncClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataSyncClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataSyncClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataSyncClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Connection_Authenticate(string userName, string password) {
            return base.Channel.Connection_Authenticate(userName, password);
        }
        
        public System.Threading.Tasks.Task<bool> Connection_AuthenticateAsync(string userName, string password) {
            return base.Channel.Connection_AuthenticateAsync(userName, password);
        }
        
        public bool Connection_Authenticate2(string userName, string password, string plugInName) {
            return base.Channel.Connection_Authenticate2(userName, password, plugInName);
        }
        
        public System.Threading.Tasks.Task<bool> Connection_Authenticate2Async(string userName, string password, string plugInName) {
            return base.Channel.Connection_Authenticate2Async(userName, password, plugInName);
        }
        
        public bool Connection_ConnectToProject(int projectId) {
            return base.Channel.Connection_ConnectToProject(projectId);
        }
        
        public System.Threading.Tasks.Task<bool> Connection_ConnectToProjectAsync(int projectId) {
            return base.Channel.Connection_ConnectToProjectAsync(projectId);
        }
        
        public void Connection_Disconnect() {
            base.Channel.Connection_Disconnect();
        }
        
        public System.Threading.Tasks.Task Connection_DisconnectAsync() {
            return base.Channel.Connection_DisconnectAsync();
        }
        
        public string System_GetProductName() {
            return base.Channel.System_GetProductName();
        }
        
        public System.Threading.Tasks.Task<string> System_GetProductNameAsync() {
            return base.Channel.System_GetProductNameAsync();
        }
        
        public System.DateTime System_GetServerDateTime() {
            return base.Channel.System_GetServerDateTime();
        }
        
        public System.Threading.Tasks.Task<System.DateTime> System_GetServerDateTimeAsync() {
            return base.Channel.System_GetServerDateTimeAsync();
        }
        
        public string System_GetWebServerUrl() {
            return base.Channel.System_GetWebServerUrl();
        }
        
        public System.Threading.Tasks.Task<string> System_GetWebServerUrlAsync() {
            return base.Channel.System_GetWebServerUrlAsync();
        }
        
        public Inflectra.SpiraTest.ApiTestSuite.SpiraDataSync40.RemoteDataSyncSystem[] DataSyncSystem_Retrieve() {
            return base.Channel.DataSyncSystem_Retrieve();
        }
        
        public System.Threading.Tasks.Task<Inflectra.SpiraTest.ApiTestSuite.SpiraDataSync40.RemoteDataSyncSystem[]> DataSyncSystem_RetrieveAsync() {
            return base.Channel.DataSyncSystem_RetrieveAsync();
        }
        
        public void DataSyncSystem_SaveRunFailure(int dataSyncSystemId) {
            base.Channel.DataSyncSystem_SaveRunFailure(dataSyncSystemId);
        }
        
        public System.Threading.Tasks.Task DataSyncSystem_SaveRunFailureAsync(int dataSyncSystemId) {
            return base.Channel.DataSyncSystem_SaveRunFailureAsync(dataSyncSystemId);
        }
        
        public void DataSyncSystem_SaveRunSuccess(int dataSyncSystemId, System.DateTime lastRunDate) {
            base.Channel.DataSyncSystem_SaveRunSuccess(dataSyncSystemId, lastRunDate);
        }
        
        public System.Threading.Tasks.Task DataSyncSystem_SaveRunSuccessAsync(int dataSyncSystemId, System.DateTime lastRunDate) {
            return base.Channel.DataSyncSystem_SaveRunSuccessAsync(dataSyncSystemId, lastRunDate);
        }
        
        public void DataSyncSystem_SaveRunWarning(int dataSyncSystemId, System.DateTime lastRunDate) {
            base.Channel.DataSyncSystem_SaveRunWarning(dataSyncSystemId, lastRunDate);
        }
        
        public System.Threading.Tasks.Task DataSyncSystem_SaveRunWarningAsync(int dataSyncSystemId, System.DateTime lastRunDate) {
            return base.Channel.DataSyncSystem_SaveRunWarningAsync(dataSyncSystemId, lastRunDate);
        }
        
        public void DataSyncSystem_WriteEvent(string message, string details, int eventLogEntryType) {
            base.Channel.DataSyncSystem_WriteEvent(message, details, eventLogEntryType);
        }
        
        public System.Threading.Tasks.Task DataSyncSystem_WriteEventAsync(string message, string details, int eventLogEntryType) {
            return base.Channel.DataSyncSystem_WriteEventAsync(message, details, eventLogEntryType);
        }
    }
}
