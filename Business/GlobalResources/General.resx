<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Global_NoneFlag" xml:space="preserve">
    <value>{None}</value>
  </data>
  <data name="Global_NoTasks" xml:space="preserve">
    <value>No Tasks</value>
  </data>
  <data name="Global_Tasks" xml:space="preserve">
    <value>Tasks</value>
  </data>
  <data name="Task_NotStarted" xml:space="preserve">
    <value>Not Started</value>
  </data>
  <data name="Task_OnSchedule" xml:space="preserve">
    <value>On Schedule</value>
  </data>
  <data name="Task_ProgressNotStarted" xml:space="preserve">
    <value>not started</value>
  </data>
  <data name="Task_ProgressPercentComplete" xml:space="preserve">
    <value>% complete</value>
  </data>
  <data name="Task_ProgressScheduledEndOn" xml:space="preserve">
    <value>scheduled to end on</value>
  </data>
  <data name="Task_ProgressShouldHaveStartedOn" xml:space="preserve">
    <value>should have started on</value>
  </data>
  <data name="Task_Progress_ShouldHaveFinishedOn" xml:space="preserve">
    <value>should have finished on</value>
  </data>
  <data name="Task_RunningLate" xml:space="preserve">
    <value>Running Late</value>
  </data>
  <data name="Task_StartingLate" xml:space="preserve">
    <value>Starting Late</value>
  </data>
  <data name="TestRun_VariousTestCases" xml:space="preserve">
    <value>Various Test Cases</value>
  </data>
  <data name="TestCase_NewTestCase" xml:space="preserve">
    <value>New Test Case</value>
  </data>
  <data name="TestCase_NewTestCaseComment" xml:space="preserve">
    <value>New test case created from requirement</value>
  </data>
  <data name="TestSet_NewTestSetBasedOnRelease" xml:space="preserve">
    <value>New test set based on release</value>
  </data>
  <data name="TestSet_NewTestSetBasedOnRequirements" xml:space="preserve">
    <value>New test set based on selected requirements</value>
  </data>
  <data name="Requirement_NotCovered" xml:space="preserve">
    <value>Not Covered</value>
  </data>
  <data name="TestCase_Blocked" xml:space="preserve">
    <value>Blocked</value>
  </data>
  <data name="TestCase_Caution" xml:space="preserve">
    <value>Caution</value>
  </data>
  <data name="TestCase_Failed" xml:space="preserve">
    <value>Failed</value>
  </data>
  <data name="TestCase_NotRun" xml:space="preserve">
    <value>Not Run</value>
  </data>
  <data name="TestCase_Passed" xml:space="preserve">
    <value>Passed</value>
  </data>
  <data name="TestCase_Run" xml:space="preserve">
    <value>Run</value>
  </data>
  <data name="Global_No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Global_Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Global_Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="Global_CopyOf" xml:space="preserve">
    <value>Copy of</value>
  </data>
  <data name="Task_Completed" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="Requirement_ReqCreatedFromIncident" xml:space="preserve">
    <value>Requirement created from existing incident.</value>
  </data>
  <data name="TestCase_Call" xml:space="preserve">
    <value>Call</value>
  </data>
  <data name="Incident_Complete" xml:space="preserve">
    <value>complete</value>
  </data>
  <data name="Incident_NotStarted" xml:space="preserve">
    <value>not started</value>
  </data>
  <data name="Incident_ShouldHaveStartedOn" xml:space="preserve">
    <value>should have started on</value>
  </data>
  <data name="GraphDescription_IncidentAging" xml:space="preserve">
    <value>The Incident Aging chart displays the number of days incidents have been left open in the system</value>
  </data>
  <data name="GraphDescription_IncidentCumulativeCount" xml:space="preserve">
    <value>The Incident Cumulative Count chart displays the cumulative total number of incidents logged in the system for the current project over a particular date-range</value>
  </data>
  <data name="GraphDescription_IncidentOpenCount" xml:space="preserve">
    <value>The Incident Open Count chart displays the total number of open incidents in the system for the current project over a particular date-range categorized by incident priority</value>
  </data>
  <data name="GraphDescription_IncidentProgressRate" xml:space="preserve">
    <value>The Incident Progress Rate chart displays the total number of incidents created and closed over a particular date-range</value>
  </data>
  <data name="GraphDescription_IncidentSummary" xml:space="preserve">
    <value>The Incident Summary graph shows how many incidents are currently in a project. The number of incidents is displayed according to the criteria that you specify. You can specify the type of data displayed along the x-axis, and the incident information which is used to group the data</value>
  </data>
  <data name="GraphDescription_IncidentTurnaround" xml:space="preserve">
    <value>The Incident Turnaround Time Chart displays the number of days incidents have taken to be closed (from the time they were first raised) in the system</value>
  </data>
  <data name="GraphDescription_RequirementCoverage" xml:space="preserve">
    <value>The Requirements Coverage graph shows how many requirements are currently in a project, according to their test coverage status</value>
  </data>
  <data name="GraphDescription_RequirementSummary" xml:space="preserve">
    <value>The Requirements Summary graph shows how many requirements are currently in a project. The number of requirements is displayed according to the criteria that you specify. You can specify the type of data displayed along the x-axis, and the requirement information which is used to group the data</value>
  </data>
  <data name="GraphDescription_TaskBurnDown" xml:space="preserve">
    <value>The Task Burndown graph shows the remaining work that needs to be done for each release/sprint in the project.</value>
  </data>
  <data name="GraphDescription_TaskBurnUp" xml:space="preserve">
    <value>The Task Burnup graph shows the cumulative increase in work for each release/sprint in the project with the percentage of tasks that are on-schedule, late starting and late finishing indicated.</value>
  </data>
  <data name="GraphDescription_TaskSummary" xml:space="preserve">
    <value>The Task Summary graph shows how many tasks are currently in a project. The number of tasks is displayed according to the criteria that you specify. You can specify the type of data displayed along the x-axis, and the task information which is used to group the data</value>
  </data>
  <data name="GraphDescription_TaskVelocity" xml:space="preserve">
    <value>The Task Velocity graph shows the total estimated and actual effort delivered in each project release and/or sprint</value>
  </data>
  <data name="GraphDescription_TestCaseSummary" xml:space="preserve">
    <value>The Test Case Summary graph shows how many test cases are currently in a project. The number of test cases is displayed according to the criteria that you specify. You can specify the type of data displayed along the x-axis, and the test case information which is used to group the data</value>
  </data>
  <data name="GraphDescription_TestRunProgressRate" xml:space="preserve">
    <value>The Test Run Progress Rate graph shows how many tests have been executed during a period of time, and what execution status was recorded.</value>
  </data>
  <data name="GraphDescription_TestRunSummary" xml:space="preserve">
    <value>The Test Run Summary graph shows how many test runs have been executed in a project. The number of test runs is displayed according to the criteria that you specify. You can specify the type of data displayed along the x-axis, and the test run information which is used to group the data</value>
  </data>
  <data name="GraphName_IncidentAging" xml:space="preserve">
    <value>Incident Aging</value>
  </data>
  <data name="GraphName_IncidentCumulativeCount" xml:space="preserve">
    <value>Incident Cumulative Count</value>
  </data>
  <data name="GraphName_IncidentOpenCount" xml:space="preserve">
    <value>Incident Open Count</value>
  </data>
  <data name="GraphName_IncidentProgressRate" xml:space="preserve">
    <value>Incident Progress Rate</value>
  </data>
  <data name="GraphName_IncidentSummary" xml:space="preserve">
    <value>Incident Summary</value>
  </data>
  <data name="GraphName_IncidentTurnaround" xml:space="preserve">
    <value>Incident Turnaround Time</value>
  </data>
  <data name="GraphName_RequirementCoverage" xml:space="preserve">
    <value>Requirements Coverage</value>
  </data>
  <data name="GraphName_RequirementSummary" xml:space="preserve">
    <value>Requirements Summary</value>
  </data>
  <data name="GraphName_TaskBurnDown" xml:space="preserve">
    <value>Task Burndown</value>
  </data>
  <data name="GraphName_TaskBurnUp" xml:space="preserve">
    <value>Task Burnup</value>
  </data>
  <data name="GraphName_TaskSummary" xml:space="preserve">
    <value>Task Summary</value>
  </data>
  <data name="GraphName_TaskVelocity" xml:space="preserve">
    <value>Task Velocity</value>
  </data>
  <data name="GraphName_TestCaseSummary" xml:space="preserve">
    <value>Test Case Summary</value>
  </data>
  <data name="GraphName_TestRunProgressRate" xml:space="preserve">
    <value>Test Run Progress Rate</value>
  </data>
  <data name="GraphName_TestRunSummary" xml:space="preserve">
    <value>Test Run Summary</value>
  </data>
  <data name="Graph_ClosedCount" xml:space="preserve">
    <value>Closed Count</value>
  </data>
  <data name="Graph_Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Graph_DiscoveredCount" xml:space="preserve">
    <value>Discovered Count</value>
  </data>
  <data name="Graph_OpenCount" xml:space="preserve">
    <value>Open Count</value>
  </data>
  <data name="Graph_TotalCount" xml:space="preserve">
    <value>Total Count</value>
  </data>
  <data name="Global_None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="GraphDescription_TestSetSummary" xml:space="preserve">
    <value>The Test Set Summary graph shows how many test sets are currently in a project. The number of test sets is displayed according to the criteria that you specify. You can specify the type of data displayed along the x-axis, and the test set information which is used to group the data</value>
  </data>
  <data name="GraphName_TestSetSummary" xml:space="preserve">
    <value>Test Set Summary</value>
  </data>
  <data name="Graph_Age" xml:space="preserve">
    <value>Age</value>
  </data>
  <data name="Graph_Turnaround" xml:space="preserve">
    <value>Turnaround</value>
  </data>
  <data name="Graph_Iteration" xml:space="preserve">
    <value>Sprint</value>
  </data>
  <data name="Graph_Release" xml:space="preserve">
    <value>Release</value>
  </data>
  <data name="Graphs_CompletedEffort" xml:space="preserve">
    <value>Completed Effort</value>
  </data>
  <data name="Graphs_EstimatedEffort" xml:space="preserve">
    <value>Estimated Effort</value>
  </data>
  <data name="Graphs_IdealEffort" xml:space="preserve">
    <value>Ideal Effort</value>
  </data>
  <data name="Graphs_RemainingEffort" xml:space="preserve">
    <value>Remaining Effort</value>
  </data>
  <data name="Graphs_ActualVelocity" xml:space="preserve">
    <value>Actual Velocity</value>
  </data>
  <data name="Graphs_ExpectedVelocity" xml:space="preserve">
    <value>Expected Velocity</value>
  </data>
  <data name="Graph_Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="Graph_CoverageStatus" xml:space="preserve">
    <value>Coverage Status</value>
  </data>
  <data name="Project_ResourceAllocated" xml:space="preserve">
    <value>Resource Allocated</value>
  </data>
  <data name="Requirement_NewRequirement" xml:space="preserve">
    <value>New Requirement</value>
  </data>
  <data name="Requirement_NewRequirementComment" xml:space="preserve">
    <value>New requirement created from test case</value>
  </data>
  <data name="Global_Incident" xml:space="preserve">
    <value>Incident</value>
  </data>
  <data name="Workflow_ChangeStatusSubject" xml:space="preserve">
    <value>changed status from '{0}' to '{1}'</value>
  </data>
  <data name="Global_ImportedFrom" xml:space="preserve">
    <value>Imported from Project #{0}, {1} #{2}</value>
    <comment>0 - Old project ID; 1 - Artifact Name; 2 - Old Artifact ID.</comment>
  </data>
  <data name="Global_ExportedTo" xml:space="preserve">
    <value>Exported to Project #{0}, {1} #{2}</value>
    <comment>0 - New project ID; 1 - Artifact Name; 2 - New Artifact ID.</comment>
  </data>
  <data name="Workflow_DefaultWorflow" xml:space="preserve">
    <value>Default Workflow</value>
  </data>
  <data name="TestStep_Step" xml:space="preserve">
    <value>Step</value>
  </data>
  <data name="Global_Revision" xml:space="preserve">
    <value>Commit</value>
  </data>
  <data name="Global_Report" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="NotificationManager_ReplySeperationLine" xml:space="preserve">
    <value>------=&gt; Please keep your reply above this line. &lt;=-</value>
    <comment>NOAUTO</comment>
  </data>
  <data name="History_ArtifactIdFormat" xml:space="preserve">
    <value>Artifact [{0}:{1}]</value>
  </data>
  <data name="Notification_SubscriptionSubject" xml:space="preserve">
    <value>${Product}: Artifact Subscription Notice</value>
    <comment>NOAUTO</comment>
  </data>
  <data name="NotificationManager_HoursAndMinutes" xml:space="preserve">
    <value>{0} hours and {1} minutes</value>
    <comment>NOAUTO</comment>
  </data>
  <data name="History_PurgeProgress_AutomationHosts" xml:space="preserve">
    <value>Purging Automation Hosts...</value>
  </data>
  <data name="History_PurgeProgress_Complete" xml:space="preserve">
    <value>Complete!</value>
  </data>
  <data name="History_PurgeProgress_Incidents" xml:space="preserve">
    <value>Purging Incidents...</value>
  </data>
  <data name="History_PurgeProgress_Releases" xml:space="preserve">
    <value>Purging Releases...</value>
  </data>
  <data name="History_PurgeProgress_Requirements" xml:space="preserve">
    <value>Purging Requirements...</value>
  </data>
  <data name="History_PurgeProgress_RequirementSteps" xml:space="preserve">
    <value>Purging Requirement Steps...</value>
  </data>
  <data name="History_PurgeProgress_Tasks" xml:space="preserve">
    <value>Purging Tasks...</value>
  </data>
  <data name="History_PurgeProgress_TestCases" xml:space="preserve">
    <value>Purging Test Cases..</value>
  </data>
  <data name="History_PurgeProgress_TestSets" xml:space="preserve">
    <value>Purging Test Sets...</value>
  </data>
  <data name="History_PurgeProgress_TestSteps" xml:space="preserve">
    <value>Purging Test Steps...</value>
  </data>
  <data name="TestCase_NotApplicable" xml:space="preserve">
    <value>Not Applicable</value>
  </data>
  <data name="NotificationManager_SendIndivNotification" xml:space="preserve">
    <value>{0} - This {1} requires your attention!</value>
    <comment>{0} - Project Name ("ValidationMaster"), {1} - Artifact Type</comment>
  </data>
  <data name="SourceCode_SourceCodeCommit" xml:space="preserve">
    <value>Source Code Commit</value>
  </data>
  <data name="SourceCode_NoProvidersLoaded" xml:space="preserve">
    <value>No source code providers could be loaded for project #{0}.</value>
  </data>
  <data name="SourceCode_CouldNotLogin" xml:space="preserve">
    <value>Unable to authenticate with the source code provider.</value>
  </data>
  <data name="SourceCode_NoProvidersEnabled" xml:space="preserve">
    <value>No source code providers are enabled for project #{0}.</value>
  </data>
  <data name="SouceCode_UnableToLoadDLL" xml:space="preserve">
    <value>Unable to load source code provider '{0}'.</value>
  </data>
  <data name="SourceCode_CouldNotIni" xml:space="preserve">
    <value>Could not initialize provider library '{0}'.</value>
  </data>
  <data name="SourceCode_InvalidCache" xml:space="preserve">
    <value>Source Code library is updating cache.</value>
  </data>
  <data name="GraphDescription_RequirementBurnDown" xml:space="preserve">
    <value>The Requirement Burndown graph shows the remaining number of story points that needs to be done for each release/sprint in the project.</value>
  </data>
  <data name="GraphDescription_RequirementBurnUp" xml:space="preserve">
    <value>The Requirement Burnup graph shows the cumulative number of story points for each release/sprint in the project with the number of completed story points indicated for each interval.</value>
  </data>
  <data name="GraphDescription_RequirementVelocity" xml:space="preserve">
    <value>The Requirement Velocity graph shows the actual number of story points delivered in each project release and/or sprint as compared to the average.</value>
  </data>
  <data name="GraphName_RequirementBurnDown" xml:space="preserve">
    <value>Requirement Burndown</value>
  </data>
  <data name="GraphName_RequirementBurnUp" xml:space="preserve">
    <value>Requirement Burnup</value>
  </data>
  <data name="GraphName_RequirementVelocity" xml:space="preserve">
    <value>Requirement Velocity</value>
  </data>
  <data name="Graphs_ActualBurnup" xml:space="preserve">
    <value>Actual Burnup</value>
  </data>
  <data name="Graphs_AverageVelocity" xml:space="preserve">
    <value>Average Velocity</value>
  </data>
  <data name="Graphs_CompletedPoints" xml:space="preserve">
    <value>Completed Points</value>
  </data>
  <data name="Graphs_IdealBurndown" xml:space="preserve">
    <value>Ideal Burndown</value>
  </data>
  <data name="Graphs_IdealBurnup" xml:space="preserve">
    <value>Ideal Burnup</value>
  </data>
  <data name="Graphs_RemainingPoints" xml:space="preserve">
    <value>Remaining Points</value>
  </data>
  <data name="Graphs_RollingAverage" xml:space="preserve">
    <value>Rolling Average</value>
  </data>
  <data name="Global_Multiple" xml:space="preserve">
    <value>Multiple</value>
  </data>
  <data name="Project_ResourceAllocatedOpen" xml:space="preserve">
    <value>Allocated to Open Artifacts</value>
  </data>
  <data name="History_Exported" xml:space="preserve">
    <value>Exported</value>
  </data>
  <data name="History_Imported" xml:space="preserve">
    <value>Imported</value>
  </data>
  <data name="Exception_BadRequest" xml:space="preserve">
    <value>A field in the request was invalid.</value>
  </data>
  <data name="Exception_Conflict" xml:space="preserve">
    <value>An item with that name/email already exists.</value>
  </data>
  <data name="Exception_Unauthorized" xml:space="preserve">
    <value>Account is not allowed to perform this action.</value>
  </data>
  <data name="Exception_Unknown" xml:space="preserve">
    <value>An unknown communication error ({0}) occured. {1}</value>
    <comment>{0} - Status Num; {1} - Any addl messages.</comment>
  </data>
  <data name="Exceptioon_MethodNotAllowed" xml:space="preserve">
    <value>You cannot perform that action at this time.</value>
  </data>
  <data name="TestCase_DefaultTestStepExpectedResult" xml:space="preserve">
    <value>Works as expected.</value>
  </data>
  <data name="TestStep_WorksAsExpected" xml:space="preserve">
    <value>Works as expected.</value>
  </data>
  <data name="Global_Root" xml:space="preserve">
    <value>Root</value>
  </data>
  <data name="Task_NewTask" xml:space="preserve">
    <value>New Task</value>
  </data>
  <data name="TestSet_NewTestSet" xml:space="preserve">
    <value>New Test Set</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="GraphDescription_IncidentCountByStatus" xml:space="preserve">
    <value>The Incident Count by Status graph displays the cumulative total number of incidents logged in the system for the current project over a particular date-range, grouped by status.</value>
  </data>
  <data name="GraphDescription_TestCaseProgress" xml:space="preserve">
    <value>The Test Case Progress Rate graph shows how many unique test cases have been executed during a period of time, and what execution status was recorded.</value>
  </data>
  <data name="GraphDescription_TestCaseProgressCumulative" xml:space="preserve">
    <value>The Test Case Cumulative Progress Rate graph shows the progression of test case execution status over the time period, against the total number of not run test cases.</value>
  </data>
  <data name="GraphName_IncidentCountByStatus" xml:space="preserve">
    <value>Incident Count by Status</value>
  </data>
  <data name="GraphName_TestCaseProgress" xml:space="preserve">
    <value>Test Case Progress Rate</value>
  </data>
  <data name="GraphName_TestCaseProgressCumulative" xml:space="preserve">
    <value>Test Case Cumulative Progress</value>
  </data>
  <data name="TestSet_Future" xml:space="preserve">
    <value>Future</value>
  </data>
  <data name="TestSet_Overdue" xml:space="preserve">
    <value>Overdue</value>
  </data>
  <data name="TestSet_Unscheduled" xml:space="preserve">
    <value>Unscheduled</value>
  </data>
  <data name="Global_NoRequirements" xml:space="preserve">
    <value>No Requirements</value>
  </data>
  <data name="Global_Complete" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="Global_Requirements" xml:space="preserve">
    <value>Requirement(s)</value>
  </data>
  <data name="Global_Verify" xml:space="preserve">
    <value>Verify</value>
  </data>
  <data name="Incident_IncidentCreatedFromTask" xml:space="preserve">
    <value>Incident created from existing task.</value>
  </data>
  <data name="CurrentVersion" xml:space="preserve">
    <value>Current Version</value>
  </data>
  <data name="DocumentVersion" xml:space="preserve">
    <value>Document Version</value>
  </data>
  <data name="Document_AddVersion" xml:space="preserve">
    <value>Added Version</value>
  </data>
  <data name="Document_DeleteVersion" xml:space="preserve">
    <value>Deleted Version</value>
  </data>
  <data name="History_PurgeProgress_Attachments" xml:space="preserve">
    <value>Purging Documents..</value>
  </data>
  <data name="History_PurgeProgress_Risks" xml:space="preserve">
    <value>Purging Risk..</value>
  </data>
  <data name="History_PurgeProgress_TestConfiguration" xml:space="preserve">
    <value>Purging Test Configurations..</value>
  </data>
  <data name="History_PurgeProgress_TestRuns" xml:space="preserve">
    <value>Purging TestRuns...</value>
  </data>
</root>