<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:msxsl="urn:schemas-microsoft-com:xslt" exclude-result-prefixes="msxsl">
  <xsl:template match="/ReleaseData">
    <xsl:for-each select="Release">
      <div class="Title2">
        <xsl:value-of select="VersionNumber"/> - <xsl:value-of select="Name"/>
      </div>
      <div class="Description">
        <xsl:value-of select="Description" disable-output-escaping="yes"/>
      </div>
      <table class="HiddenTable">
        <tr>
          <th>Version #:</th>
          <td>
            <xsl:value-of select="VersionNumber"/>
          </td>
          <th>Status:</th>
          <td>
            <xsl:value-of select="ReleaseStatusName"/>
          </td>
        </tr>
        <tr>
          <th>Owner:</th>
          <td>
            <xsl:value-of select="OwnerName"/>
          </td>
          <th>Type:</th>
          <td>
            <xsl:value-of select="ReleaseTypeName"/>
          </td>
        </tr>
        <tr>
          <th>Creator:</th>
          <td>
            <xsl:value-of select="CreatorName"/>
          </td>
          <th>Creation Date:</th>
          <td class="Date">
            <xsl:call-template name="format-date">
              <xsl:with-param name="datetime" select="CreationDate" />
            </xsl:call-template>
          </td>
        </tr>
        <tr>
          <th>Start Date:</th>
          <td class="Date">
            <xsl:call-template name="format-date">
              <xsl:with-param name="datetime" select="StartDate" />
            </xsl:call-template>
          </td>
          <th>Planned Effort:</th>
          <td class="Timespan">
            <xsl:value-of select="PlannedEffort"/>
          </td>
        </tr>
        <tr>
          <th>End Date:</th>
          <td class="Date">
            <xsl:call-template name="format-date">
              <xsl:with-param name="datetime" select="EndDate" />
            </xsl:call-template>
          </td>
          <th>Available Effort:</th>
          <td class="Timespan">
            <xsl:value-of select="AvailableEffort"/>
          </td>
        </tr>
        <tr>
          <th># Resources:</th>
          <td>
            <xsl:value-of select="ResourceCount"/>
          </td>
          <th>Task Est. Effort:</th>
          <td class="Timespan">
            <xsl:value-of select="TaskEstimatedEffort"/>
          </td>
        </tr>
        <tr>
          <th>Non-Working Days:</th>
          <td>
            <xsl:value-of select="DaysNonWorking"/>
          </td>
          <th>Actual Effort:</th>
          <td class="Timespan">
            <xsl:value-of select="TaskActualEffort"/>
          </td>
        </tr>
        <tr>
          <th>Remaining Effort:</th>
          <td class="Timespan">
            <xsl:value-of select="TaskRemainingEffort"/>
          </td>
          <th>Projected Effort:</th>
          <td class="Timespan">
            <xsl:value-of select="TaskProjectedEffort"/>
          </td>
        </tr>
        <xsl:for-each select="CustomProperties/CustomProperty">
          <tr>
            <th>
              <xsl:value-of select="Alias"/>:
            </th>
            <xsl:choose>
              <xsl:when test="Type='Date'">
                <td class="Date" colspan="3">
                  <xsl:call-template name="format-date">
                    <xsl:with-param name="datetime" select="Value" />
                  </xsl:call-template>
                </td>
              </xsl:when>
              <xsl:otherwise>
                <td colspan="3">
                  <xsl:value-of select="Value" disable-output-escaping="yes"/>
                </td>
              </xsl:otherwise>
            </xsl:choose>
          </tr>
        </xsl:for-each>
      </table>
      <br />
      <xsl:if test="Requirements/Requirement">
        <div class="Title3">
          Requirements Added:
        </div>
        <table class="DataGrid">
          <tr>
            <th>Req #</th>
            <th>Name</th>
            <th>Status</th>
            <th>Priority</th>
          </tr>
          <xsl:for-each select="Requirements/Requirement">
            <tr>
              <td>
                RQ<xsl:value-of select="RequirementId"/>
              </td>
              <td>
                <xsl:attribute name="style">
                  padding-left: <xsl:value-of select="string-length(IndentLevel)*2"/>px;
                </xsl:attribute>
                <xsl:if test="IsSummary='True'">
                  <b>
                    <xsl:value-of select="Name"/>
                  </b>
                </xsl:if>
                <xsl:if test="IsSummary='False'">
                  <xsl:value-of select="Name"/>
                </xsl:if>
              </td>
              <td>
                <xsl:value-of select="RequirementStatusName"/>
              </td>
              <td>
                <xsl:value-of select="ImportanceName"/>
              </td>
            </tr>
          </xsl:for-each>
        </table>
      </xsl:if>
      <div class="Spacer"></div>
      <xsl:if test="TestCases/TestCase">
        <div class="Title3">
          Test Coverage:
        </div>
        <table class="DataGrid">
          <tr>
            <th>Test #</th>
            <th>Name</th>
            <th>Status</th>
            <th>Last Execution Date</th>
          </tr>
          <xsl:for-each select="TestCases/TestCase">
            <tr>
              <td>
                TC<xsl:value-of select="TestCaseId"/>
              </td>
              <td>
                  <xsl:value-of select="Name"/>
              </td>
              <td>
                <xsl:value-of select="ExecutionStatusName"/>
              </td>
              <td class="Date">
                <xsl:call-template name="format-date">
                  <xsl:with-param name="datetime" select="ExecutionDate" />
                </xsl:call-template>
              </td>
            </tr>
          </xsl:for-each>
        </table>
      </xsl:if>
      <xsl:if test="DetectedIncidents/Incident">
        <div class="Title3">
          Detected Incidents:
        </div>
        <table class="DataGrid">
          <tr>
            <th>Inc #</th>
            <th>Type</th>
            <th>Status</th>
            <th>Priority</th>
            <th>Severity</th>
            <th>Name</th>
            <th>Owned By</th>
            <th>Detected On</th>
          </tr>
          <xsl:for-each select="DetectedIncidents/Incident">
            <tr>
              <td>
                IN<xsl:value-of select="IncidentId"/>
              </td>
              <td>
                <xsl:value-of select="IncidentTypeName"/>
              </td>
              <td>
                <xsl:value-of select="IncidentStatusName"/>
              </td>
              <td>
                <xsl:value-of select="PriorityName"/>
              </td>
              <td>
                <xsl:value-of select="SeverityName"/>
              </td>
              <td>
                <xsl:value-of select="Name"/>
              </td>
              <td>
                <xsl:value-of select="OwnerName"/>
              </td>
              <td class="Date">
                <xsl:call-template name="format-date">
                  <xsl:with-param name="datetime" select="CreationDate" />
                </xsl:call-template>
              </td>
            </tr>
          </xsl:for-each>
        </table>
      </xsl:if>
      <xsl:if test="ResolvedIncidents/Incident">
        <div class="Title3">
          Resolved Incidents:
        </div>
        <table class="DataGrid">
          <tr>
            <th>Inc #</th>
            <th>Type</th>
            <th>Status</th>
            <th>Priority</th>
            <th>Severity</th>
            <th>Name</th>
            <th>Owned By</th>
            <th>Detected On</th>
          </tr>
          <xsl:for-each select="ResolvedIncidents/Incident">
            <tr>
              <td>
                IN<xsl:value-of select="IncidentId"/>
              </td>
              <td>
                <xsl:value-of select="IncidentTypeName"/>
              </td>
              <td>
                <xsl:value-of select="IncidentStatusName"/>
              </td>
              <td>
                <xsl:value-of select="PriorityName"/>
              </td>
              <td>
                <xsl:value-of select="SeverityName"/>
              </td>
              <td>
                <xsl:value-of select="Name"/>
              </td>
              <td>
                <xsl:value-of select="OwnerName"/>
              </td>
              <td class="Date">
                <xsl:call-template name="format-date">
                  <xsl:with-param name="datetime" select="CreationDate" />
                </xsl:call-template>
              </td>
            </tr>
          </xsl:for-each>
        </table>
      </xsl:if>
      <xsl:if test="VerifiedIncidents/Incident">
        <div class="Title3">
          Verified Incidents:
        </div>
        <table class="DataGrid">
          <tr>
            <th>Inc #</th>
            <th>Type</th>
            <th>Status</th>
            <th>Priority</th>
            <th>Severity</th>
            <th>Name</th>
            <th>Owned By</th>
            <th>Detected On</th>
          </tr>
          <xsl:for-each select="VerifiedIncidents/Incident">
            <tr>
              <td>
                IN<xsl:value-of select="IncidentId"/>
              </td>
              <td>
                <xsl:value-of select="IncidentTypeName"/>
              </td>
              <td>
                <xsl:value-of select="IncidentStatusName"/>
              </td>
              <td>
                <xsl:value-of select="PriorityName"/>
              </td>
              <td>
                <xsl:value-of select="SeverityName"/>
              </td>
              <td>
                <xsl:value-of select="Name"/>
              </td>
              <td>
                <xsl:value-of select="OwnerName"/>
              </td>
              <td class="Date">
                <xsl:call-template name="format-date">
                  <xsl:with-param name="datetime" select="CreationDate" />
                </xsl:call-template>
              </td>
            </tr>
          </xsl:for-each>
        </table>
      </xsl:if>
      <xsl:if test="Tasks/Task">
        <div class="Title3">
          Associated Tasks:
        </div>
        <table class="DataGrid">
          <tr>
            <th>Task #</th>
            <th>Name</th>
            <th>Status</th>
            <th>Priority</th>
            <th>Owned By</th>
            <th>Start Date</th>
            <th>End Date</th>
            <th>% Completed</th>
            <th>Est. Effort</th>
            <th>Actual Effort</th>
          </tr>
          <xsl:for-each select="Tasks/Task">
            <tr>
              <td>
                TK<xsl:value-of select="TaskId"/>
              </td>
              <td>
                <xsl:value-of select="Name"/>
              </td>
              <td>
                <xsl:value-of select="TaskStatusName"/>
              </td>
              <td>
                <xsl:value-of select="TaskPriorityName"/>
              </td>
              <td>
                <xsl:value-of select="OwnerName"/>
              </td>
              <td class="Date">
                <xsl:call-template name="format-date">
                  <xsl:with-param name="datetime" select="StartDate" />
                </xsl:call-template>
              </td>
              <td class="Date">
                <xsl:call-template name="format-date">
                  <xsl:with-param name="datetime" select="EndDate" />
                </xsl:call-template>
              </td>
              <td>
                <xsl:value-of select="CompletionPercent"/> %
              </td>
              <td class="Timespan">
                <xsl:value-of select="EstimatedEffort"/>
              </td>
              <td class="Timespan">
                <xsl:value-of select="ActualEffort"/>
              </td>
            </tr>
          </xsl:for-each>
        </table>
      </xsl:if>
      <xsl:if test="Discussions/Discussion">
        <div class="Title3">
          Comments:
        </div>
        <table class="DataGrid">
          <tr>
            <th>Date</th>
            <th>Creator</th>
            <th>Comment</th>
            <th>Id</th>
          </tr>
          <xsl:for-each select="Discussions/Discussion">
            <tr>
              <td class="Date">
                <xsl:call-template name="format-date">
                  <xsl:with-param name="datetime" select="CreationDate" />
                </xsl:call-template>
              </td>
              <td>
                <xsl:value-of select="CreatorName"/>
              </td>
              <td>
                <xsl:value-of select="Text" disable-output-escaping="yes"/>
              </td>
              <td>
                <xsl:value-of select="DiscussionId"/>
              </td>
            </tr>
          </xsl:for-each>
        </table>
      </xsl:if>
      <xsl:if test="TestRuns/TestRun">
        <div class="Title3">
          Test Runs:
        </div>
        <table class="DataGrid">
          <tr>
            <th>Run #</th>
            <th>Name</th>
            <th>Test Case #</th>
            <th>Test Set</th>
            <th>Tester</th>
            <th>Status</th>
            <th>Est. Duration</th>
            <th>Actual Duration</th>
            <th>Execution Date</th>
          </tr>
          <xsl:for-each select="TestRuns/TestRun">
            <tr>
              <td>
                TR<xsl:value-of select="TestRunId"/>
              </td>
              <td>
                <xsl:value-of select="Name"/>
              </td>
              <td>
                <xsl:value-of select="TestCaseId"/>
              </td>
              <td>
                <xsl:value-of select="TestSetName"/>
              </td>
              <td>
                <xsl:value-of select="TesterName"/>
              </td>
              <td>
                <xsl:value-of select="ExecutionStatusName"/>
              </td>
              <td class="Timespan">
                <xsl:value-of select="EstimatedDuration"/>
              </td>
              <td class="Timespan">
                <xsl:value-of select="ActualDuration"/>
              </td>
              <td class="Date">
                <xsl:call-template name="format-date">
                  <xsl:with-param name="datetime" select="EndDate" />
                </xsl:call-template>
              </td>
            </tr>
          </xsl:for-each>
        </table>
      </xsl:if>
      <xsl:if test="Attachments/Attachment">
        <div class="Title3">
          File Attachments:
        </div>
        <table class="DataGrid">
          <tr>
            <th>Filename</th>
            <th>Description</th>
            <th>Author</th>
            <th>Date Uploaded</th>
          </tr>
          <xsl:for-each select="Attachments/Attachment">
            <tr>
              <td>
                <xsl:value-of select="Filename"/>
              </td>
              <td>
                <xsl:value-of select="Description"/>
              </td>
              <td>
                <xsl:value-of select="AuthorName"/>
              </td>
              <td class="Date">
                <xsl:call-template name="format-date">
                  <xsl:with-param name="datetime" select="UploadDate" />
                </xsl:call-template>
              </td>
            </tr>
          </xsl:for-each>
        </table>
      </xsl:if>
      <xsl:if test="Builds/Build">
        <div class="Title3">
          Builds:
        </div>
        <table class="DataGrid">
          <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Status</th>
            <th>Date</th>
          </tr>
          <xsl:for-each select="Builds/Build">
            <tr>
              <td>
                <xsl:value-of select="Name"/>
              </td>
              <td>
                <xsl:value-of select="Description"/>
              </td>
              <td>
                <xsl:value-of select="BuildStatusName"/>
              </td>
              <td class="Date">
                <xsl:call-template name="format-date">
                  <xsl:with-param name="datetime" select="LastUpdateDate" />
                </xsl:call-template>
              </td>
            </tr>
          </xsl:for-each>
        </table>
      </xsl:if>
      <xsl:if test="History/ArtifactHistory">
        <div class="Title3">
          Release/Iteration Change History:
        </div>
        <table class="DataGrid">
          <tr>
            <th>Change Date</th>
            <th>Field Name</th>
            <th>Old Value</th>
            <th>New Value</th>
            <th>Changed By</th>
          </tr>
          <xsl:for-each select="History/ArtifactHistory">
            <tr>
              <td class="Date">
                <xsl:call-template name="format-date">
                  <xsl:with-param name="datetime" select="ChangeDate" />
                </xsl:call-template>
              </td>
              <td>
                <xsl:value-of select="FieldCaption"/>
              </td>
              <td>
                <xsl:value-of select="OldValue" disable-output-escaping="yes"/>
              </td>
              <td>
                <xsl:value-of select="NewValue" disable-output-escaping="yes"/>
              </td>
              <td>
                <xsl:value-of select="ChangerName"/>
              </td>
            </tr>
          </xsl:for-each>
        </table>
      </xsl:if>
      <br/>
    </xsl:for-each>
  </xsl:template>
  <xsl:template name="format-date">
    <xsl:param name="datetime"/>
    <xsl:variable name="date" select="substring-before($datetime, 'T')" />
    <xsl:variable name="year" select="substring-before($date, '-')" />
    <xsl:variable name="month" select="substring-before(substring-after($date, '-'), '-')" />
    <xsl:variable name="day" select="substring-after(substring-after($date, '-'), '-')" />
    <xsl:variable name="time" select="substring-before(substring-after($datetime, 'T'), '.')" />
    <xsl:variable name="monthname">
      <xsl:choose>
        <xsl:when test="$month='01'">
          <xsl:value-of select="'Jan'"/>
        </xsl:when>
        <xsl:when test="$month='02'">
          <xsl:value-of select="'Feb'"/>
        </xsl:when>
        <xsl:when test="$month='03'">
          <xsl:value-of select="'Mar'"/>
        </xsl:when>
        <xsl:when test="$month='04'">
          <xsl:value-of select="'Apr'"/>
        </xsl:when>
        <xsl:when test="$month='05'">
          <xsl:value-of select="'May'"/>
        </xsl:when>
        <xsl:when test="$month='06'">
          <xsl:value-of select="'Jun'"/>
        </xsl:when>
        <xsl:when test="$month='07'">
          <xsl:value-of select="'Jul'"/>
        </xsl:when>
        <xsl:when test="$month='08'">
          <xsl:value-of select="'Aug'"/>
        </xsl:when>
        <xsl:when test="$month='09'">
          <xsl:value-of select="'Sep'"/>
        </xsl:when>
        <xsl:when test="$month='10'">
          <xsl:value-of select="'Oct'"/>
        </xsl:when>
        <xsl:when test="$month='11'">
          <xsl:value-of select="'Nov'"/>
        </xsl:when>
        <xsl:when test="$month='12'">
          <xsl:value-of select="'Dec'"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="''" />
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <xsl:value-of select="concat($day, '-' ,$monthname, '-', $year , ' ', $time)" />
  </xsl:template>
</xsl:stylesheet>

